{"_path":"/tags/backend/websocket","_dir":"backend","_draft":false,"_partial":false,"_locale":"","title":"WebSocket","description":"WebSocket 是一种现代化的网络通信协议，通过建立持久连接和全双工通信，实现了低延迟、高效率和实时性的数据传输。它在多种应用场景中广泛应用，为实时数据交换提供了有效的解决方案，成为许多实时应用程序的重要组成部分。","name":"websocket","icon":"icon-park:round-socket","body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"websocket"},"children":[{"type":"text","value":"WebSocket"}]},{"type":"element","tag":"icon","props":{"className":["size-32"],"name":"icon-park:round-socket"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WebSocket 是一种在单个 TCP 连接上进行全双工通信的网络协议，它允许客户端和服务器之间进行实时数据传输。WebSocket 解决了传统的 HTTP 协议在通信效率和实时性方面的限制，特别适用于需要频繁数据交换和实时更新的应用场景。以下是对 WebSocket 的详细介绍："}]},{"type":"element","tag":"h3","props":{"id":"特点和优势"},"children":[{"type":"text","value":"特点和优势"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"全双工通信"}]},{"type":"text","value":"：\nWebSocket 通过在客户端和服务器之间建立持久连接，实现了全双工通信，即客户端和服务器可以同时发送和接收数据，而无需每次通信都建立新的连接。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"低延迟和高效性"}]},{"type":"text","value":"：\n由于建立了持久连接，WebSocket 可以实现较低的延迟，避免了传统的 HTTP 请求和响应模型中频繁建立和关闭连接的开销，从而提高了通信效率。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"跨域支持"}]},{"type":"text","value":"：\nWebSocket 支持跨域通信，即在不同的域名下的客户端和服务器之间也可以建立连接和进行数据交换，而不受同源策略的限制。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"实时性和即时更新"}]},{"type":"text","value":"：\nWebSocket 适用于需要实时数据传输的应用场景，如即时通讯、实时位置跟踪、在线游戏、股票市场数据更新等，可以实时推送数据给客户端，实现即时更新。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"支持多种应用协议"}]},{"type":"text","value":"：\nWebSocket 协议本身是一个通用的协议，不限于特定的应用领域，因此可以支持多种应用的实时通信需求。"}]}]},{"type":"element","tag":"h3","props":{"id":"websocket-的工作原理"},"children":[{"type":"text","value":"WebSocket 的工作原理"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"握手阶段"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端通过 HTTP 或 HTTPS 发起 WebSocket 握手请求，请求头中包含特定的 Upgrade 和 Connection 字段，告知服务器希望升级到 WebSocket 协议。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"服务器收到请求后，如果支持 WebSocket，会返回状态码 101 Switching Protocols，表示升级成功，此时连接升级为 WebSocket。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"数据传输阶段"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端和服务器之间的连接升级后，可以直接通过发送数据帧（frame）进行通信，数据帧可以是文本帧、二进制帧或控制帧。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端和服务器都可以发送数据帧，并且数据帧可以包含应用层协议的数据。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"连接关闭阶段"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"客户端或服务器可以发送关闭帧（close frame）来关闭连接，关闭帧包含关闭状态码和可选的关闭原因。"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"websocket-和-http-的区别"},"children":[{"type":"text","value":"WebSocket 和 HTTP 的区别"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"连接方式"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HTTP 是一种请求-响应协议，每次请求都需要建立新的连接，请求结束后即关闭连接。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WebSocket 建立一次连接后保持持久连接状态，客户端和服务器可以随时进行数据交换。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"通信效率"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HTTP 在每次请求时都需要重新建立连接和传输头部信息，效率较低。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WebSocket 通过持久连接和数据帧传输，可以实现低延迟和高效率的通信。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"实时性"}]},{"type":"text","value":"："},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HTTP 通常不适用于需要实时数据传输的应用场景。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WebSocket 适用于实时性要求高的应用，可以实时推送数据给客户端。"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"websocket-的应用场景"},"children":[{"type":"text","value":"WebSocket 的应用场景"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"即时通讯和聊天应用"}]},{"type":"text","value":"：如在线聊天室、社交应用中的实时消息传递。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"实时位置跟踪"}]},{"type":"text","value":"：如地图应用中的实时位置更新和导航信息推送。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"在线游戏"}]},{"type":"text","value":"：支持实时多人游戏中的数据传输和状态同步。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"金融市场"}]},{"type":"text","value":"：如股票交易平台中的实时股价更新和交易通知。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"监控和控制系统"}]},{"type":"text","value":"：如实时监控系统中的数据传输和告警通知。"}]}]},{"type":"element","tag":"h3","props":{"id":"总结"},"children":[{"type":"text","value":"总结"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WebSocket 是一种现代化的网络通信协议，通过建立持久连接和全双工通信，实现了低延迟、高效率和实时性的数据传输。它在多种应用场景中广泛应用，为实时数据交换提供了有效的解决方案，成为许多实时应用程序的重要组成部分。"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[{"id":"websocket","depth":2,"text":"WebSocket","children":[{"id":"特点和优势","depth":3,"text":"特点和优势"},{"id":"websocket-的工作原理","depth":3,"text":"WebSocket 的工作原理"},{"id":"websocket-和-http-的区别","depth":3,"text":"WebSocket 和 HTTP 的区别"},{"id":"websocket-的应用场景","depth":3,"text":"WebSocket 的应用场景"},{"id":"总结","depth":3,"text":"总结"}]}]}},"_type":"markdown","_id":"content:tags:backend:websocket.md","_source":"content","_file":"tags/backend/websocket.md","_extension":"md"}