{"_path":"/tags/frontend/angularjs","_dir":"frontend","_draft":false,"_partial":false,"_locale":"","title":"AngularJS","description":"NestJS是一个基于TypeScript和Node.js的后端框架，主要用于构建可维护且高效的服务器端应用程序。功能强大、灵活且易于使用的后端框架，适用于各种规模和复杂度的Web应用程序开发。","name":"angularjs","icon":"devicon:angularjs","body":{"type":"root","children":[{"type":"element","tag":"icon","props":{"className":["size-32"],"name":"devicon:angularjs-wordmark"},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AngularJS是一个诞生于2009年的前端框架，由Misko Hevery等人创建，后被Google收购。它是为了克服HTML在构建应用上的不足而设计的，通过扩展HTML的语法和添加新的属性，使得开发者能够更方便地构建复杂的单页面应用（SPAs）。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AngularJS的主要特性包括："}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"双向数据绑定"}]},{"type":"text","value":"：AngularJS实现了数据模型和视图之间的双向数据同步。当数据模型发生变化时，视图会自动更新；反之，当视图发生变化时，数据模型也会自动更新。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"模块化"}]},{"type":"text","value":"：AngularJS采用模块化的设计，将应用程序拆分成多个模块，每个模块负责不同的功能，有助于代码的清晰和结构的合理。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"依赖注入"}]},{"type":"text","value":"：AngularJS使用依赖注入的方式来管理组件之间的依赖关系，这有助于开发者提高代码质量和可维护性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"MVVM模式"}]},{"type":"text","value":"：AngularJS采用了MVVM（Model-View-ViewModel）模式，有助于将视图与数据模型进行分离，提高代码的可读性和可维护性。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"语义化标签和指令"}]},{"type":"text","value":"：AngularJS允许开发者使用自定义的指令来扩展HTML的功能，同时支持语义化标签，使得代码更易于理解和维护。"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"AngularJS在构建CRUD（增加、查询、更新、删除）应用时表现出色，它提供了一系列工具和功能，包括数据绑定、表单验证、路由、组件重用等，使得开发者能够更高效地构建Web应用。此外，AngularJS还有丰富的在线教程和社区资源，为开发者提供了良好的学习和支持环境。"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"总的来说，AngularJS是一个功能强大、灵活且易于使用的前端框架，适用于构建各种复杂的单页面应用。"}]}],"toc":{"title":"","searchDepth":5,"depth":5,"links":[]}},"_type":"markdown","_id":"content:tags:frontend:angularjs.md","_source":"content","_file":"tags/frontend/angularjs.md","_extension":"md"}