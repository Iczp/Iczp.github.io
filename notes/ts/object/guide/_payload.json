[{"data":1,"prerenderedAt":3963},["ShallowReactive",2],{"navigation":3,"content-query-9TXbHbLdNM":1226},[4,12,405,1115,1131,1148,1165,1177,1208],{"title":5,"_path":6,"description":7,"icon":8,"$isDir":9,"tags":10,"categories":11},"Content Home","/","","ic:outline-house",false,[],[],{"title":13,"_path":14,"children":15,"description":7,"icon":399,"$isDir":37,"$fileCount":39,"$dirCount":400,"$totalFileCount":401,"$totalDirCount":402,"tags":403,"categories":404},"Notes.md","/notes",[16,42,57,69,101,388],{"title":17,"_path":18,"children":19,"description":36,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":40,"categories":41},"随笔","/notes/hybrid",[20,29],{"title":21,"_path":22,"author":23,"date":24,"tags":25,"description":7,"categories":28},"剪切版(Clipboard)的使用 剪切版(Clipboard)的使用剪切版(Clipboard)的使用","/notes/hybrid/clipboard","iczp","2024-06-20T00:00:00.000Z",[26,27],"ts","js",[],{"title":30,"_path":31,"author":23,"date":32,"tags":33,"description":7,"categories":35},"图标","/notes/hybrid/icon","2024-06-19T00:00:00.000Z",[34,26],"vue",[],"记录开发中遇到的问题",true,2,0,[],[],{"title":43,"_path":44,"children":45,"$isDir":37,"$fileCount":54,"$dirCount":39,"$totalFileCount":54,"$totalDirCount":39,"tags":55,"categories":56},"JS","/notes/js",[46],{"title":47,"_path":48,"author":23,"date":49,"tags":50,"description":52,"categories":53},"Day.js","/notes/js/dayjs","2024-06-25T00:00:00.000Z",[51,27,26],"dayjs","Day.js 是一个轻量级的 JavaScript 日期库，提供类似于 Moment.js 的 API。它体积小（约 2KB），性能高，支持链式操作，并且支持插件扩展。Day.js 主要用于解析、验证、操作和显示日期和时间。",[],1,[],[],{"title":58,"_path":59,"children":60,"$isDir":37,"$fileCount":54,"$dirCount":39,"$totalFileCount":54,"$totalDirCount":39,"tags":67,"categories":68},"Nuxt 文档","/notes/nuxt",[61],{"title":62,"_path":63,"description":7,"layout":64,"tags":65,"categories":66},"Nuxt3 中使用 Tailwind CSS","/notes/nuxt/nuxt-tailwind","article",[],[],[],[],{"title":70,"_path":71,"children":72,"description":70,"$isDir":37,"$fileCount":98,"$dirCount":39,"$totalFileCount":98,"$totalDirCount":39,"tags":99,"categories":100},"开发工具","/notes/tools",[73,79,87,92],{"title":74,"_path":75,"description":76,"tags":77,"categories":78},"市场上的人工智能（AI）技术","/notes/tools/ai","目前市场上的人工智能（AI）技术和产品种类繁多，涵盖了从基础研究到实际应用的各个方面。以下是一些主要的 AI 技术和产品类别，以及一些代表性的公司和产品：",[],[],{"title":80,"_path":81,"date":82,"tags":83,"description":7,"categories":86},"Tailwind CSS 颜色生成器","/notes/tools/colors-generator","2024-06-13T00:00:00.000Z",[84,85],"tailwindcss","css",[],{"title":88,"_path":89,"description":7,"tags":90,"categories":91},"图片转Svg","/notes/tools/img2svg",[],[],{"title":93,"_path":94,"description":95,"tags":96,"categories":97},"SVG转图片PNG","/notes/tools/svg2img","https://svgtopng.com/zh/",[],[],4,[],[],{"title":102,"_path":103,"children":104,"$isDir":37,"$fileCount":39,"$dirCount":384,"$totalFileCount":385,"$totalDirCount":384,"tags":386,"categories":387},"Typescript 笔记","/notes/ts",[105,123,266,311,336],{"title":106,"_path":107,"children":108,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":121,"categories":122},"数组 Array","/notes/ts/array",[109,115],{"title":110,"_path":111,"author":23,"date":24,"tags":112,"description":113,"categories":114},"includes 方法","/notes/ts/array/includes",[34,26],"Array.prototype.includes 方法用于判断数组是否包含某个指定的值，返回一个布尔值。它是 ES2016 引入的一部分，TypeScript 支持这一特性。",[],{"title":116,"_path":117,"author":23,"date":32,"tags":118,"description":119,"categories":120},"数组转换成对象字典","/notes/ts/array/to-dictionary",[34,26],"使用 `reduce` 方法遍历数组，并将每个用户对象添加到字典中。`reduce` 的初始值是一个空对象 `{}`，类型是 `{ [key: number]: User }`。",[],[],[],{"title":124,"_path":125,"children":126,"$isDir":37,"$fileCount":263,"$dirCount":39,"$totalFileCount":263,"$totalDirCount":39,"tags":264,"categories":265},"Typescript 手册","/notes/ts/book",[127,133,139,145,151,157,163,169,175,181,187,193,199,205,210,216,222,228,234,240,246,252,257],{"title":128,"_path":129,"author":23,"date":32,"tags":130,"description":131,"categories":132},"基础类型","/notes/ts/book/basic-types",[26],"TypeScript 基础类型",[],{"title":134,"_path":135,"author":23,"date":32,"tags":136,"description":137,"categories":138},"变量声明","/notes/ts/book/variable-declarations",[26],"TypeScript 变量声明,作用域规则,捕获变量怪异之处,块作用域,重定义及屏蔽,块级作用域变量的获取",[],{"title":140,"_path":141,"author":23,"date":32,"tags":142,"description":143,"categories":144},"变量解构","/notes/ts/book/variable-deconstruction",[26],"在 TypeScript 中，变量解构是一种简洁的语法，允许从数组或对象中提取值，并将其赋值给变量。解构可以提高代码的可读性和可维护性。以下是 TypeScript 中变量解构的详细介绍，包括数组解构、对象解构、解构赋值中的默认值、嵌套解构和函数参数解构",[],{"title":146,"_path":147,"author":23,"date":32,"tags":148,"description":149,"categories":150},"Interface(接口)","/notes/ts/book/interface",[26],"interface 作用,核心原则,类型,实现,继承等一些用法及示例，注意事项",[],{"title":152,"_path":153,"author":23,"date":32,"tags":154,"description":155,"categories":156},"Class(类)","/notes/ts/book/classes",[26],"类（Class）是面向对象编程的核心概念之一，它提供了一种结构化的方式来定义对象的蓝图，包括属性和方法。下面详细介绍 TypeScript 中类的定义、构造函数、属性、方法、继承、访问修饰符等相关内容。",[],{"title":158,"_path":159,"author":23,"date":32,"tags":160,"description":161,"categories":162},"Function(函数)","/notes/ts/book/functions",[26],"函数是JavaScript应用程序的基础。 它帮助你实现抽象层，模拟类，信息隐藏和模块。 在TypeScript里，虽然已经支持类，命名空间和模块，但函数仍然是主要的定义 行为的地方。 TypeScript为JavaScript函数添加了额外的功能，让我们可以更容易地使用。",[],{"title":164,"_path":165,"author":23,"date":49,"tags":166,"description":167,"categories":168},"Generics(泛型)","/notes/ts/book/generics",[26],"TypeScript 泛型的详细介绍，包括泛型变量、泛型类型、泛型类、泛型约束及学习技巧",[],{"title":170,"_path":171,"author":23,"date":49,"tags":172,"description":173,"categories":174},"Enums(枚举)","/notes/ts/book/enums",[26],"枚举（Enums）是一种用于定义一组命名常量的方式。枚举可以使代码更具可读性和可维护性",[],{"title":176,"_path":177,"author":23,"date":49,"tags":178,"description":179,"categories":180},"Type Inference(类型推论)","/notes/ts/book/type-inference",[26],"类型推论（Type Inference）是一种编译器自动推断变量类型的机制。",[],{"title":182,"_path":183,"author":23,"date":49,"tags":184,"description":185,"categories":186},"Type Compatibility(类型兼容性)","/notes/ts/book/type-compatibility",[26],"TypeScript里的类型兼容性是基于结构子类型的。 结构类型是一种只使用其成员来描述类型的方式。 它正好与名义（nominal）类型形成对比。（译者注：在基于名义类型的类型系统中，数据类型的兼容性或等价性是通过明确的声明和/或类型的名称来决定的。这与结构性类型系统不同，它是基于类型的组成结构，且不要求明确地声明。）",[],{"title":188,"_path":189,"author":23,"date":49,"tags":190,"description":191,"categories":192},"Advanced Topics(高级主题)","/notes/ts/book/advanced-types",[26],"TypeScript 高级类型是 TypeScript 类型系统中的一些高级特性和技巧，用于编写更复杂和灵活的代码",[],{"title":194,"_path":195,"author":23,"date":49,"tags":196,"description":197,"categories":198},"Symbols","/notes/ts/book/symbols",[26],"TypeScript 中的 Symbols 是一种独特且不可变的数据类型，每个 Symbol 都是唯一的。它们通常用于定义对象属性的键，并且不会与其他属性键发生冲突。",[],{"title":200,"_path":201,"author":23,"date":49,"tags":202,"description":203,"categories":204},"迭代器和生成器","/notes/ts/book/iterators-and-generators",[26],"TypeScript 中的迭代器和生成器是用来处理序列的功能强大的工具。迭代器允许对象自定义其迭代行为，而生成器则提供了一种更便捷的方式来定义复杂的迭代逻辑。",[],{"title":206,"_path":207,"author":23,"date":49,"tags":208,"description":203,"categories":209},"Modules(模块)","/notes/ts/book/modules",[26],[],{"title":211,"_path":212,"author":23,"date":49,"tags":213,"description":214,"categories":215},"Namespaces(命名空间)","/notes/ts/book/namespaces",[26],"Namespaces(命名空间) 是 TypeScript 提供的一种组织代码的方法，特别适用于大型项目。通过使用 namespaces，可以将代码分隔成不同的模块，从而避免全局命名空间污染并提升代码的可读性和可维护性。",[],{"title":217,"_path":218,"author":23,"date":49,"tags":219,"description":220,"categories":221},"Namespaces & Modules(命名空间和模块)","/notes/ts/book/namespaces-and-modules",[26],"在 TypeScript 中，`Namespaces` 和 `Modules` 是用于组织和管理代码的两种主要机制。",[],{"title":223,"_path":224,"author":23,"date":49,"tags":225,"description":226,"categories":227},"Module Resolution(模块解析)","/notes/ts/book/module-resolution",[26],"模块解析是指编译器在查找导入模块内容时所遵循的流程。假设有一个导入语句 import { a } from \"moduleA\"; 为了去检查任何对 a的使用，编译器需要准确的知道它表示什么，并且需要检查它的定义moduleA。",[],{"title":229,"_path":230,"author":23,"date":49,"tags":231,"description":232,"categories":233},"Declaration Merging(声明合并)","/notes/ts/book/declaration-merging",[26],"“声明合并”是指编译器将针对同一个名字的两个独立声明合并为单一声明。 合并后的声明同时拥有原先两个声明的特性。 任何数量的声明都可被合并；不局限于两个声明。",[],{"title":235,"_path":236,"author":23,"date":49,"tags":237,"description":238,"categories":239},"JSX","/notes/ts/book/jsx",[26],"JSX是一种嵌入式的类似XML的语法。 它可以被转换成合法的JavaScript，尽管转换的语义是依据不同的实现而定的。 JSX因React框架而流行，但也存在其它的实现。 TypeScript支持内嵌，类型检查以及将JSX直接编译为JavaScript。",[],{"title":241,"_path":242,"author":23,"date":49,"tags":243,"description":244,"categories":245},"Decorators(装饰器)","/notes/ts/book/decorators",[26],"装饰器（Decorators）为我们在类的声明及成员上通过元编程语法添加标注提供了一种方式。 Javascript里的装饰器目前处在 建议征集的第二阶段，但在TypeScript里已做为一项实验性特性予以支持。",[],{"title":247,"_path":248,"author":23,"date":49,"tags":249,"description":250,"categories":251},"Mixins(混入)","/notes/ts/book/mixins",[26],"除了传统的面向对象继承方式，还流行一种通过可重用组件创建类的方式，就是联合另一个简单类的代码。 你可能在Scala等语言里对mixins及其特性已经很熟悉了，但它在JavaScript中也是很流行的。",[],{"title":253,"_path":254,"author":23,"date":49,"tags":255,"description":250,"categories":256},"三斜线指令(///\u003C...>)","/notes/ts/book/triple-slash-directives",[26],[],{"title":258,"_path":259,"author":23,"date":49,"tags":260,"description":261,"categories":262},"JavaScript文件类型检查","/notes/ts/book/type-checking-javascript-files",[26],"对文件进行类型检查和错误提示",[],23,[],[],{"title":267,"_path":268,"children":269,"$isDir":37,"$fileCount":308,"$dirCount":39,"$totalFileCount":308,"$totalDirCount":39,"tags":309,"categories":310},"TypeScript 声明文件","/notes/ts/declaration-files",[270,275,281,287,292,297,302],{"title":267,"_path":271,"author":23,"date":32,"tags":272,"description":273,"categories":274},"/notes/ts/declaration-files/introduction",[26],"TypeScript 声明文件（Declaration Files）用于描述已有 JavaScript 代码库的类型信息，以便 TypeScript 能够理解和对其进行类型检查。这对于在 TypeScript 中使用第三方 JavaScript 库或在项目中使用不具备 TypeScript 类型定义的模块非常有用。",[],{"title":276,"_path":277,"author":23,"date":32,"tags":278,"description":279,"categories":280},"库(library)结构","/notes/ts/declaration-files/library-structures",[26],"创建和组织库（library）的结构非常重要，它直接影响到库的可维护性、可用性以及用户的使用体验",[],{"title":282,"_path":283,"author":23,"date":32,"tags":284,"description":285,"categories":286},"声明文件示例","/notes/ts/declaration-files/by-example",[26],"书写高质量的TypeScript声明文件，展示一些API的文档以及例子",[],{"title":288,"_path":289,"author":23,"date":32,"tags":290,"description":285,"categories":291},"规范及用例","/notes/ts/declaration-files/do-s-and-don-ts",[26],[],{"title":293,"_path":294,"author":23,"date":32,"tags":295,"description":293,"categories":296},"模板","/notes/ts/declaration-files/templates",[26],[],{"title":298,"_path":299,"author":23,"date":32,"tags":300,"description":285,"categories":301},"发布声明文件到npm","/notes/ts/declaration-files/publishing",[26],[],{"title":303,"_path":304,"author":23,"date":32,"tags":305,"description":306,"categories":307},"使用npm包","/notes/ts/declaration-files/consumption",[26],"使用Npm包",[],7,[],[],{"title":312,"_path":313,"children":314,"$isDir":37,"$fileCount":333,"$dirCount":39,"$totalFileCount":333,"$totalDirCount":39,"tags":334,"categories":335},"Object 方法","/notes/ts/object",[315,321,327],{"title":316,"_path":317,"author":23,"date":24,"tags":318,"description":319,"categories":320},"总览","/notes/ts/object/guide",[26],"在 TypeScript 中，Object 是 JavaScript 中的基本对象类型，包含多种方法来操作和处理对象。",[],{"title":322,"_path":323,"author":23,"date":24,"tags":324,"description":325,"categories":326},"Object.assign","/notes/ts/object/assign",[26],"用于将一个或多个源对象的所有可枚举属性复制到目标对象中，返回目标对象。",[],{"title":328,"_path":329,"author":23,"date":24,"tags":330,"description":331,"categories":332},"Object.create","/notes/ts/object/create",[26],"用于创建一个新对象，并将其原型设置为指定的对象。",[],3,[],[],{"title":337,"_path":338,"children":339,"$isDir":37,"$fileCount":308,"$dirCount":39,"$totalFileCount":308,"$totalDirCount":39,"tags":382,"categories":383},"Typescript 项目配置","/notes/ts/project-configuration",[340,346,352,358,364,370,376],{"title":341,"_path":342,"author":23,"date":49,"tags":343,"description":344,"categories":345},"tsconfig.json","/notes/ts/project-configuration/tsconfig-json",[26],"`tsconfig.json`文件中指定了用来编译这个项目的根文件和编译选项。",[],{"title":347,"_path":348,"author":23,"date":49,"tags":349,"description":350,"categories":351},"编译器选项","/notes/ts/project-configuration/compiler-options-in-msbuild",[26],"在使用 MSBuild 构建 TypeScript 项目时，可以通过配置 TypeScript 编译器选项（Compiler Options）来指定编译器的行为和输出。",[],{"title":353,"_path":354,"author":23,"date":49,"tags":355,"description":356,"categories":357},"tsc CLI Options","/notes/ts/project-configuration/compiler-options",[26],"TypeScript 的 tsc（TypeScript Compiler）命令行工具是用于编译 TypeScript 项目的主要工具，它支持多种命令行选项来控制编译器的行为。这些选项可以用来指定编译的输入文件、输出目录、目标版本等等",[],{"title":359,"_path":360,"author":23,"date":49,"tags":361,"description":362,"categories":363},"项目引用","/notes/ts/project-configuration/project-references",[26],"项目引用（Project References）是一个强大的功能，允许一个 TypeScript 项目引用另一个 TypeScript 项目。这个功能非常适用于大型代码库和单体仓库（monorepos），它使得项目之间的依赖关系更明确，并且可以显著加快编译速度。",[],{"title":365,"_path":366,"author":23,"date":49,"tags":367,"description":368,"categories":369},"与构建工具集成","/notes/ts/project-configuration/integrating-with-build-tools",[26],"在现代前端开发中，使用构建工具来管理和自动化构建流程已经成为一种常见的做法。TypeScript 提供了良好的工具链支持，可以无缝集成到各种构建工具中，例如 Gulp、Grunt、Webpack 等",[],{"title":371,"_path":372,"author":23,"date":49,"tags":373,"description":374,"categories":375},"配置监视","/notes/ts/project-configuration/configuring-watch",[26],"在 TypeScript 中，`--watch` 选项允许编译器监视文件变化，并在文件修改时自动重新编译。这对于开发者来说是一个非常有用的功能，可以提高开发效率，减少手动编译的次数。除了基本的 `--watch` 选项，TypeScript 提供了许多配置选项来定制监视行为。",[],{"title":377,"_path":378,"author":23,"date":49,"tags":379,"description":380,"categories":381},"每日构建","/notes/ts/project-configuration/nightly-builds",[26],"Nightly Builds",[],[],[],5,42,[],[],{"title":389,"_path":390,"children":391,"$isDir":37,"$fileCount":54,"$dirCount":39,"$totalFileCount":54,"$totalDirCount":39,"tags":397,"categories":398},"Vue 文档","/notes/vue",[392],{"title":393,"_path":394,"date":82,"tags":395,"description":7,"categories":396},"vue3 获取插槽内容\u003Cslot>","/notes/vue/vue-slot",[34,26],[],[],[],"solar:notebook-broken",6,51,11,[],[],{"title":406,"_path":407,"children":408,"description":7,"icon":1110,"$isDir":37,"$fileCount":39,"$dirCount":1111,"$totalFileCount":1112,"$totalDirCount":1111,"tags":1113,"categories":1114},"标签","/tags",[409,428,561,623,658,832,889,937,951,1021],{"title":410,"_path":411,"children":412,"icon":425,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":426,"categories":427},"智能AI","/tags/ai",[413,420],{"title":414,"_path":415,"description":416,"icon":417,"tags":418,"categories":419},"Chat GPT","/tags/ai/chatgpt","ChatGPT 是由 OpenAI 开发的一种基于 GPT（Generative Pre-trained Transformer）架构的自然语言处理模型。它通过大量的文本数据进行预训练，并能够生成类似人类的文本响应。","arcticons:openai-chatgpt",[],[],{"title":421,"_path":422,"description":416,"icon":417,"tags":423,"categories":424},"EdgeDB AI","/tags/ai/edagedb-ai",[],[],"material-symbols:robot",[],[],{"title":429,"_path":430,"children":431,"author":23,"description":556,"icon":557,"$isDir":37,"$fileCount":558,"$dirCount":39,"$totalFileCount":558,"$totalDirCount":39,"tags":559,"categories":560},"后端技术","/tags/backend",[432,439,446,453,460,467,473,480,487,494,501,508,515,522,528,535,542,549],{"title":433,"_path":434,"description":435,"icon":436,"tags":437,"categories":438},"ASP.NET Boilerplate","/tags/backend/abp","ASP.NET Boilerplate是一个不断发展的框架，随着技术的不断进步和新的需求出现，它也在不断地更新和演进。因此，建议在使用之前查阅最新的文档和社区资源，以了解最新的功能和最佳实践。人员快速构建可扩展、可维护和可测试的应用程序。许多开发团队的首选语言之一","Abp",[],[],{"title":440,"_path":441,"description":442,"icon":443,"tags":444,"categories":445},"Abp vNext","/tags/backend/abpvnext","ABP VNext是abp团队重新设计的主要版本的ASP.NET Boilerplate框架，是一个开源的应用框架，用于开发现代化的企业级Web应用程序。它基于.NET平台，提供了一套丰富的工具和功能，帮助开发人员快速构建可扩展、可维护和可测试的应用程序。许多开发团队的首选语言之一","AbpVNext",[],[],{"title":447,"_path":448,"description":449,"icon":450,"tags":451,"categories":452},"Entity Framework Core","/tags/backend/efcore","Entity Framework Core(简称EF Core)是一个功能强大且易于使用的ORM框架，它简化了.NET开发者与关系型数据库的交互过程，提高了开发效率和代码质量。如需更多信息，建议查阅微软官方文档或相关教程。","Efcore",[],[],{"title":454,"_path":455,"description":456,"icon":457,"tags":458,"categories":459},"Elasticsearch","/tags/backend/elasticsearch","Elasticsearch 是一个强大且灵活的搜索和分析引擎，适用于各种需要快速搜索和实时数据分析的应用场景。通过其分布式架构、丰富的查询语言和强大的集成功能，Elasticsearch 成为现代数据驱动应用中不可或缺的工具。","logos:elasticsearch",[],[],{"title":461,"_path":462,"description":463,"icon":464,"tags":465,"categories":466},"Graphql","/tags/backend/graphql","GraphQL是一种强大而灵活的API查询语言，适用于需要高效、灵活和可扩展数据获取的场景。","logos:graphql",[],[],{"title":468,"_path":469,"description":470,"icon":468,"tags":471,"categories":472},"Hangfire","/tags/backend/hangfire","Hangfire 是一个功能强大的后台任务管理工具，适用于各种 .NET 应用程序。它提供了丰富的任务调度和管理功能，支持任务的持久化存储和分布式执行，简化了后台任务的开发和维护工作。通过 Hangfire，开发人员可以轻松实现高效、可靠的后台任务处理，提高应用程序的性能和用户体验。",[],[],{"title":474,"_path":475,"description":476,"icon":477,"tags":478,"categories":479},"JWT","/tags/backend/jwt","JWT是一种强大且灵活的工具，适用于各种网络应用环境间的数据传递和身份验证需求。然而，在使用JWT时也需要考虑其潜在的缺点，并根据具体的应用场景和需求进行合理的选择和配置。","logos:jwt-icon",[],[],{"title":481,"_path":482,"description":483,"icon":484,"tags":485,"categories":486},"MinIO","/tags/backend/minio","MinIO 是一个强大且灵活的对象存储解决方案，兼容 S3 API，提供高性能、高可用性和可扩展性，适用于各种大规模数据存储和处理场景。通过简单的安装和配置，开发人员和运维人员可以快速部署和管理 MinIO，构建可靠的数据存储基础设施。","MinioIcon",[],[],{"title":488,"_path":489,"description":490,"icon":491,"tags":492,"categories":493},".Net","/tags/backend/net",".NET 是一个功能强大、易于使用且高度可定制的应用程序开发框架，适用于各种规模和复杂度的项目。无论是初学者还是经验丰富的开发者，都可以通过 .NET 框架快速构建高质量的应用程序","logos:dotnet",[],[],{"title":495,"_path":496,"description":497,"icon":498,"tags":499,"categories":500},".Net Core","/tags/backend/netcore",".NET Core是一个功能强大、灵活且跨平台的应用程序开发框架，适用于各种类型的应用程序开发需求。无论你是初学者还是经验丰富的开发者，都可以通过.NET Core来构建高质量、高性能的应用程序","devicon:dotnetcore",[],[],{"title":502,"_path":503,"description":504,"icon":505,"tags":506,"categories":507},"Nuget","/tags/backend/nuget","NuGet是一个自由开源的软件包管理系统，是一个功能强大且灵活的包管理工具，可以大大简化.NET开发人员在项目中的库管理任务，提高开发效率。","devicon:nuget",[],[],{"title":509,"_path":510,"description":511,"icon":512,"tags":513,"categories":514},"OAuth","/tags/backend/oauth","OAuth是一个功能强大、安全且广泛应用的开放标准，它极大地简化了用户资源的授权过程，并提高了系统的安全性。","logos:oauth",[],[],{"title":516,"_path":517,"description":518,"icon":519,"tags":520,"categories":521},"Prisma","/tags/backend/prisma","Prisma是一个功能强大、灵活且易于使用的数据库访问工具，它极大地简化了开发人员与数据库的交互过程，提高了开发效率和数据访问的安全性。","logos:prisma",[],[],{"title":523,"_path":524,"description":525,"icon":523,"tags":526,"categories":527},"Quartz","/tags/backend/quartz","Quartz 是一个强大且灵活的作业调度框架，适用于各种复杂的调度需求。通过其丰富的功能和易用的 API，开发人员可以轻松实现各种定时任务和后台作业，提升应用程序的自动化和可靠性。Quartz 的持久化支持和分布式调度能力使得它在高可用性和大规模系统中表现出色。",[],[],{"title":529,"_path":530,"description":531,"icon":532,"tags":533,"categories":534},"RabbitMQ","/tags/backend/rabbitmq","RabbitMQ 是一个功能强大且灵活的消息中间件，广泛应用于分布式系统中实现异步消息传递和任务处理。通过其可靠性、灵活性和可扩展性，RabbitMQ 能够满足各种高并发和高可用性应用场景的需求，成为现代微服务架构和消息驱动架构中的关键组件。","logos:rabbitmq-icon",[],[],{"title":536,"_path":537,"description":538,"icon":539,"tags":540,"categories":541},"Swagger","/tags/backend/swagger","Swagger是一个规范和完整的框架，主要用于生成、描述、调用和可视化RESTful风格的Web服务。它旨在使客户端和文件系统作为服务器以同样的速度来更新，并确保文件的方法、参数和模型紧密集成到服务器端的代码，以保持API的同步。","logos:swagger",[],[],{"title":543,"_path":544,"description":545,"icon":546,"tags":547,"categories":548},"TypeORM","/tags/backend/typeorm","TypeORM是一个功能强大、灵活且易于使用的ORM库，它极大地简化了Node.js中的数据库操作，提高了开发效率和代码质量。","logos:typeorm",[],[],{"title":550,"_path":551,"description":552,"icon":553,"tags":554,"categories":555},"WebSocket","/tags/backend/websocket","WebSocket 是一种现代化的网络通信协议，通过建立持久连接和全双工通信，实现了低延迟、高效率和实时性的数据传输。它在多种应用场景中广泛应用，为实时数据交换提供了有效的解决方案，成为许多实时应用程序的重要组成部分。","icon-park:round-socket",[],[],"后端技术\\服务器\\数据库\\框架\\工具","simple-icons:backendless",18,[],[],{"title":562,"_path":563,"children":564,"icon":619,"$isDir":37,"$fileCount":620,"$dirCount":39,"$totalFileCount":620,"$totalDirCount":39,"tags":621,"categories":622},"数据库","/tags/databases",[565,572,579,586,593,599,606,613],{"title":566,"_path":567,"description":568,"icon":569,"tags":570,"categories":571},"EdgeDB","/tags/databases/edgedb","EdgeDB 是一种新一代的图关系数据库，设计为关系数据库的精神继承者。 是一种现代的数据库管理系统，旨在解决传统关系型数据库和NoSQL数据库的一些局限性。它结合了关系数据库和图数据库的优点，提供了强大的数据建模能力和灵活的查询语言。","file-icons:edge",[],[],{"title":573,"_path":574,"description":575,"icon":576,"tags":577,"categories":578},"MongoDB","/tags/databases/mongodb","MongoDB是一个功能强大、灵活且易于使用的数据库系统，适用于各种需要高性能数据存储和处理的场景。","logos:mongodb-icon",[],[],{"title":580,"_path":581,"description":582,"icon":583,"tags":584,"categories":585},"Microsoft Sqlserver","/tags/databases/mssql","SQLite是一款功能强大、轻量级且易于使用的数据库系统，适用于各种需要嵌入式或轻量级数据库支持的应用场景。","devicon:microsoftsqlserver",[],[],{"title":587,"_path":588,"description":589,"icon":590,"tags":591,"categories":592},"MySql","/tags/databases/mysql","MySQL是一个功能强大、易用、可靠且高性能的关系型数据库管理系统，广泛应用于各种应用场景，是开发者和企业级应用的理想选择。","devicon:mysql",[],[],{"title":594,"_path":595,"description":582,"icon":596,"tags":597,"categories":598},"Oracle","/tags/databases/oracle","simple-icons:oracle",[],[],{"title":600,"_path":601,"description":602,"icon":603,"tags":604,"categories":605},"PostgreSQL","/tags/databases/postgresql","PostgreSQL凭借其强大的功能、高度的可定制性、出色的并发控制能力以及丰富的数据类型支持等特点，成为了关系型数据库领域的佼佼者。","logos:postgresql",[],[],{"title":607,"_path":608,"description":609,"icon":610,"tags":611,"categories":612},"Redis","/tags/databases/redis","Redis是一个功能强大、性能优越的Key-Value数据库，能够满足各种复杂的业务需求，提高系统的整体性能和稳定性。如需更多信息，建议查阅Redis的官方文档或相关教程。","logos:redis",[],[],{"title":614,"_path":615,"description":582,"icon":616,"tags":617,"categories":618},"Sqlite","/tags/databases/sqlite","devicon:sqlite",[],[],"material-symbols:database",8,[],[],{"title":624,"_path":625,"children":626,"icon":655,"$isDir":37,"$fileCount":98,"$dirCount":39,"$totalFileCount":98,"$totalDirCount":39,"tags":656,"categories":657},"部署/构建","/tags/deploy",[627,634,641,648],{"title":628,"_path":629,"description":630,"icon":631,"tags":632,"categories":633},"Docker","/tags/deploy/docker","Docker是一种强大且灵活的容器化平台，为开发者提供了便捷的应用程序打包、部署和管理工具，使得应用程序的开发、测试和部署更加高效和可靠。Docker在现代应用开发和部署中扮演着重要的角色。","logos:docker-icon",[],[],{"title":635,"_path":636,"description":637,"icon":638,"tags":639,"categories":640},"Github Actions","/tags/deploy/github-actions","GitHub Actions是一个功能强大的自动化工具，能够极大地提升开发工作流程的效率和生产力。如需了解更多GitHub Actions的详细信息和使用方法，建议查阅GitHub官方文档或相关教程。","logos:github-actions",[],[],{"title":642,"_path":643,"description":644,"icon":645,"tags":646,"categories":647},"Kubernetes(k8s)","/tags/deploy/k8s","Kubernetes，简称K8s。Kubernetes是一个功能强大、灵活且易于使用的容器编排系统，它使得容器化应用的部署、管理和扩展变得更加简单和高效，是云原生应用的标准解决方案。","logos:kubernetes",[],[],{"title":649,"_path":650,"description":651,"icon":652,"tags":653,"categories":654},"Vercel","/tags/deploy/vercel","Vercel是一个功能丰富、易于使用的云平台，适合前端开发人员构建、部署和扩展现代Web应用程序。无论是个人项目还是大型企业应用，Vercel都能提供灵活且强大的解决方案。","logos:vercel-icon",[],[],"material-symbols:deployed-code",[],[],{"title":659,"_path":660,"children":661,"icon":828,"$isDir":37,"$fileCount":829,"$dirCount":39,"$totalFileCount":829,"$totalDirCount":39,"tags":830,"categories":831},"前端技术","/tags/frontend",[662,669,676,682,689,695,702,709,716,723,729,735,742,749,756,763,770,777,783,790,796,802,808,814,821],{"title":663,"_path":664,"description":665,"icon":666,"tags":667,"categories":668},"AngularJS","/tags/frontend/angularjs","NestJS是一个基于TypeScript和Node.js的后端框架，主要用于构建可维护且高效的服务器端应用程序。功能强大、灵活且易于使用的后端框架，适用于各种规模和复杂度的Web应用程序开发。","devicon:angularjs",[],[],{"title":670,"_path":671,"description":672,"icon":673,"tags":674,"categories":675},"Animate.css","/tags/frontend/animate-css","Animate.css 是一个简单易用的 CSS 动画库，为网页设计师和开发者提供了丰富的动画效果，能够快速增添页面的视觉吸引力和交互性。通过 Animate.css，用户可以轻松地实现各种动态效果，改善用户体验，使网页内容更加生动和引人注目。","logos:css-3",[],[],{"title":677,"_path":678,"description":679,"icon":673,"tags":680,"categories":681},"CSS","/tags/frontend/css","CSS（Cascading Style Sheets）是用于描述文档样式和布局的样式表语言，用于控制网页的外观和样式。CSS定义了各种属性和值，用于设置元素的样式，如颜色、字体、间距、边框等",[],[],{"title":683,"_path":684,"description":685,"icon":686,"tags":687,"categories":688},"D3.js","/tags/frontend/d3js","D3.js是一个功能强大、灵活且社区活跃的JavaScript数据可视化库，它可以帮助开发者创建出丰富多样的数据可视化作品，提升数据的展示效果和用户体验。","devicon:d3js",[],[],{"title":47,"_path":690,"description":691,"icon":692,"tags":693,"categories":694},"/tags/frontend/dayjs","Day.js 是一个轻量级的 JavaScript 库，用于解析、验证、操作和显示日期和时间。它的 API 设计与 Moment.js 十分相似，但其大小仅为 2KB（gzip 压缩后），因此在性能和包大小方面具有明显优势。Day.js 是一个现代替代方案，适合那些需要高性能和小体积日期处理库的项目。","logos:momentjs",[],[],{"title":696,"_path":697,"description":698,"icon":699,"tags":700,"categories":701},"Electron","/tags/frontend/electron","Electron是一个功能强大、易用且具有广泛社区支持的跨平台桌面应用程序框架，它使得开发者能够使用Web技术构建出具有丰富功能和优秀性能的桌面应用程序。","logos:electron",[],[],{"title":703,"_path":704,"description":705,"icon":706,"tags":707,"categories":708},"ESLint","/tags/frontend/eslint","Vue.js是一款灵活、高效的前端框架，适用于构建现代化的交互式Web应用程序。其简洁的API设计和丰富的生态系统使得开发者能够快速构建功能丰富、响应迅速的Web应用","logos:eslint",[],[],{"title":710,"_path":711,"description":712,"icon":713,"tags":714,"categories":715},"Iconify","/tags/frontend/iconify","Iconify是一个功能强大、灵活且易于使用的图标解决方案，无论是对于需要快速集成图标到项目的开发者，还是对于追求高度定制化的设计师，都是一个理想的选择。","line-md:iconify2",[],[],{"title":717,"_path":718,"description":719,"icon":720,"tags":721,"categories":722},"jQuery","/tags/frontend/jquery","jQuery 作为一个功能强大且易于使用的 JavaScript 库，通过简化 DOM 操作、事件处理、Ajax 请求和动画效果，大大提升了前端开发的效率和便捷性。尽管随着现代 JavaScript 和前端框架（如 React、Vue.js 和 Angular）的发展，jQuery 的使用逐渐减少，但它依然是许多项目中的重要工具，并在维护遗留代码和简单项目中发挥着关键作用。","skill-icons:jquery",[],[],{"title":724,"_path":725,"description":726,"icon":692,"tags":727,"categories":728},"Moment.js","/tags/frontend/momentjs","Moment.js 是一个强大的 JavaScript 库，用于解析、验证、操作和显示日期和时间。它提供了丰富的 API，使得日期和时间处理变得简单和直观。尽管 Moment.js 已经宣布进入维护模式，并建议使用替代库（如 Luxon 或 date-fns），它仍然在许多项目中广泛使用。以下是对 Moment.js 的详细介绍，包括其安装、基本用法和一些常见功能。",[],[],{"title":730,"_path":731,"description":665,"icon":732,"tags":733,"categories":734},"NestJS","/tags/frontend/nestjs","logos:nestjs",[],[],{"title":736,"_path":737,"description":738,"icon":739,"tags":740,"categories":741},"Nodejs","/tags/frontend/nodejs","Node.js是一个强大且灵活的后端开发工具，通过其事件驱动、非阻塞I/O和模块化等特性，使得开发者能够构建高性能、可扩展的网络应用程序，并在前后端开发中实现更好的协作和一致性。Node.js在现代Web开发中扮演着重要的角色。","logos:nodejs-icon-alt",[],[],{"title":743,"_path":744,"description":745,"icon":746,"tags":747,"categories":748},"NPM","/tags/frontend/npm","npm是一个强大且广泛使用的JavaScript包管理工具，为开发者提供了便捷的包管理、依赖解析和脚本执行功能，是现代JavaScript开发中不可或缺的工具之一。","logos:npm-2",[],[],{"title":750,"_path":751,"description":752,"icon":753,"tags":754,"categories":755},"Nuxt","/tags/frontend/nuxtjs","Nuxt.js是一个功能强大且灵活的Vue.js应用框架，适用于构建各种类型的Web应用程序，包括单页面应用（SPA）、多页面应用（MPA）、静态站点等。其服务端渲染和静态站点生成功能使得开发者能够快速构建高性能、SEO友好的Web应用。","logos:nuxt-icon",[],[],{"title":757,"_path":758,"description":759,"icon":760,"tags":761,"categories":762},"p5js","/tags/frontend/p5js","p5.js 是一个强大且易于使用的 JavaScript 库，专为创意编程和艺术项目设计。它简化了图形绘制、交互处理和动画制作，使得即使是编程初学者也能快速上手并创作出丰富多彩的作品。通过其广泛的功能和社区支持，p5.js 成为创意编码领域的重要工具。","skill-icons:p5js",[],[],{"title":764,"_path":765,"description":766,"icon":767,"tags":768,"categories":769},"PandaCSS","/tags/frontend/pandacss","PandaCSS是一个功能强大、易用且高效的CSS-in-JS框架，适合各种前端开发需求，特别是需要高效管理样式和提高开发体验的场景。","logos:pandacss-icon",[],[],{"title":771,"_path":772,"description":773,"icon":774,"tags":775,"categories":776},"Pnpm","/tags/frontend/pnpm","Pnpm是一种快速、高效且磁盘空间友好的包管理工具。它通过共享依赖来减少磁盘空间占用，并通过硬链接来加快安装速度。","logos:pnpm",[],[],{"title":778,"_path":779,"description":705,"icon":780,"tags":781,"categories":782},"PostCSS","/tags/frontend/postcss","logos:postcss",[],[],{"title":784,"_path":785,"description":786,"icon":787,"tags":788,"categories":789},"Prettier","/tags/frontend/prettier","Prettier 是一个强大而灵活的代码格式化工具，它能够帮助开发者快速、方便地实现一致的代码风格，提高代码质量和开发效率。","logos:prettier",[],[],{"title":791,"_path":792,"description":665,"icon":793,"tags":794,"categories":795},"React","/tags/frontend/react","devicon:react",[],[],{"title":84,"_path":797,"description":798,"icon":799,"tags":800,"categories":801},"/tags/frontend/tailwindcss","Tailwind CSS是一个功能强大且易于定制的CSS框架，适用于快速构建现代化的网页界面。它的原子类和响应式设计特性使得开发者能够快速实现各种样式效果，提高开发效率。","logos:tailwindcss-icon",[],[],{"title":803,"_path":804,"description":705,"icon":805,"tags":806,"categories":807},"Vite","/tags/frontend/vite","logos:vitess",[],[],{"title":809,"_path":810,"description":705,"icon":811,"tags":812,"categories":813},"Vue","/tags/frontend/vue","logos:vue",[],[],{"title":815,"_path":816,"description":817,"icon":818,"tags":819,"categories":820},"Vue Use","/tags/frontend/vueuse","Vue 2 和 3 的基本 Vue Composition API 实用程序集合","logos:vueuse",[],[],{"title":822,"_path":823,"description":824,"icon":825,"tags":826,"categories":827},"Yarn","/tags/frontend/yarn","Yarn是另一种资源协调者，也是一种高效的包管理工具","logos:yarn",[],[],"simple-icons:frontendmentor",25,[],[],{"title":833,"_path":834,"children":835,"description":885,"icon":886,"$isDir":37,"$fileCount":308,"$dirCount":39,"$totalFileCount":308,"$totalDirCount":39,"tags":887,"categories":888},"编程语言","/tags/langs",[836,843,850,857,864,871,878],{"title":837,"_path":838,"description":839,"icon":840,"tags":841,"categories":842},"C#","/tags/langs/csharp","C#是一种功能强大且灵活的编程语言，适用于各种类型的应用开发，包括桌面应用、Web应用、游戏开发等。其丰富的特性和工具使得开发者能够快速构建高质量的应用程序，并在不同平台上实现应用程序的部署和运行。","logos:c-sharp",[],[],{"title":844,"_path":845,"description":846,"icon":847,"tags":848,"categories":849},"Dart","/tags/langs/dart","Dart是一种功能强大且灵活的编程语言，适用于各种应用场景。无论是构建高效的Web应用，还是开发跨平台的移动应用，Dart都能提供优秀的解决方案。","logos:dart",[],[],{"title":851,"_path":852,"description":853,"icon":854,"tags":855,"categories":856},"Java","/tags/langs/java","Java 作为一种成熟的编程语言，凭借其跨平台、面向对象、简单、安全、高性能等优点，成为了许多开发者的首选工具。无论是在企业级开发、移动开发、Web 开发还是大数据处理领域，Java 都发挥着重要作用。","logos:java",[],[],{"title":858,"_path":859,"description":860,"icon":861,"tags":862,"categories":863},"Javascript","/tags/langs/js","JavaScript是一种强大且灵活的编程语言，广泛应用于Web开发、移动应用开发、游戏开发等领域。其动态特性、事件驱动模型和丰富的生态系统使得JavaScript成为现代Web开发中不可或缺的一部分。","vscode-icons:file-type-js",[],[],{"title":865,"_path":866,"description":867,"icon":868,"tags":869,"categories":870},"Regex","/tags/langs/regex","Regex,全称Regular Expression，中文称为正则表达式，是一种文本模式","skill-icons:regex-light",[],[],{"title":872,"_path":873,"description":874,"icon":875,"tags":876,"categories":877},"SQL","/tags/langs/sql","SQL语言广泛应用于各种关系数据库管理系统，如Microsoft SQL Server、MySQL、PostgreSQL、MariaDB和Oracle等。","devicon:azuresqldatabase",[],[],{"title":879,"_path":880,"description":881,"icon":882,"tags":883,"categories":884},"Typescript","/tags/langs/ts","TypeScript 是一种由微软开发的编程语言，它是 JavaScript 的一个超集，并添加了静态类型、类、接口和模块等特性。TypeScript 代码在编译时会转换为纯 JavaScript 代码，这样它就可以在任何支持 JavaScript 的环境中运行，比如浏览器或 Node.js","vscode-icons:file-type-typescript",[],[],"编程语言（Programming Language）是用于定义计算机程序的形式化语言。它是一组记号和规则，用于表达数据处理和算法过程的系统。编程语言可以被分为不同的类别，如低级语言（如机器语言和汇编语言）和高级语言（如C、Java、Python等）。","hugeicons:laptop-programming",[],[],{"title":890,"_path":891,"children":892,"icon":934,"$isDir":37,"$fileCount":400,"$dirCount":39,"$totalFileCount":400,"$totalDirCount":39,"tags":935,"categories":936},"移动端开发","/tags/mobile",[893,900,907,914,921,927],{"title":894,"_path":895,"description":896,"icon":897,"tags":898,"categories":899},"Android","/tags/mobile/android","Android作为全球最流行的移动操作系统之一，为用户提供了丰富的功能和服务，为开发者提供了广阔的应用开发平台，同时也为设备制造商提供了灵活的定制化选择，成为移动设备领域的重要一员。","f7:logo-android",[],[],{"title":901,"_path":902,"description":903,"icon":904,"tags":905,"categories":906},"Flutter","/tags/mobile/flutter","Flutter是一个强大且现代化的移动应用开发框架，通过其跨平台特性、快速开发能力和优秀的性能表现，使得开发者能够轻松构建高质量的移动应用，并且在不同平台上实现一致的用户体验。","logos:flutter",[],[],{"title":908,"_path":909,"description":910,"icon":911,"tags":912,"categories":913},"Ionic","/tags/mobile/ionic","Ionic是一个功能强大、易于使用的移动应用开发框架，特别适合那些希望使用Web技术来构建高性能移动应用的开发者。然而，需要注意的是，Ionic主要关注于移动应用的UI和交互开发，对于复杂的后端逻辑或特定于平台的原生功能，可能还需要结合其他技术或工具来实现。","devicon:ionic",[],[],{"title":915,"_path":916,"description":917,"icon":918,"tags":919,"categories":920},"iOS","/tags/mobile/ios","iOS作为一个成熟、稳定且功能丰富的移动操作系统，为用户提供了优质的用户体验和开发者友好的开发环境，成为全球最受欢迎的移动操作系统之一。","f7:logo-ios",[],[],{"title":922,"_path":923,"description":924,"icon":793,"tags":925,"categories":926},"React Native","/tags/mobile/react-native","React Native为移动应用开发提供了一种高效、灵活且强大的解决方案，使得开发者能够更快地构建出优质的移动应用，满足不断变化的市场需求。",[],[],{"title":928,"_path":929,"description":930,"icon":931,"tags":932,"categories":933},"Uniapp","/tags/mobile/uniapp","UniApp是一个强大且灵活的跨平台应用开发框架，通过其跨平台特性、Vue.js基础和丰富的组件库，使得开发者能够快速构建高质量的跨平台应用，降低开发成本，提高开发效率。UniApp在移动应用开发领域具有广泛的应用和影响力。","mdi:unicode",[],[],"octicon:device-mobile",[],[],{"title":938,"_path":939,"children":940,"icon":948,"$isDir":37,"$fileCount":54,"$dirCount":39,"$totalFileCount":54,"$totalDirCount":39,"tags":949,"categories":950},"边缘工具","/tags/others",[941],{"title":942,"_path":943,"description":944,"icon":945,"tags":946,"categories":947},"VVLL","/tags/others/vvll","通过VVLL.net，开发者可以获取关于Vite、Vue和前端开发相关的最新资讯、文档和教程，帮助他们更好地理解和应用这些技术，提升前端开发能力和效率。","logos:waypoint-icon",[],[],"mdi:tools",[],[],{"title":952,"_path":953,"children":954,"icon":1017,"$isDir":37,"$fileCount":1018,"$dirCount":39,"$totalFileCount":1018,"$totalDirCount":39,"tags":1019,"categories":1020},"文本格式","/tags/textformats",[955,962,969,976,983,990,997,1004,1010],{"title":956,"_path":957,"description":958,"icon":959,"tags":960,"categories":961},"H5","/tags/textformats/h5","H5（HTML5）是HTML的第五个版本，是对HTML标准的更新和扩展。HTML5引入了许多新的特性和功能，使得Web开发变得更加强大和灵活。HTML5是一个强大且灵活的标准，为开发者提供了丰富的功能和工具，使得构建现代化、交互式的Web页面和应用程序变得更加容易和高效","logos:html-5",[],[],{"title":963,"_path":964,"description":965,"icon":966,"tags":967,"categories":968},"HTML","/tags/textformats/html","HTML是构建Web页面的基础，通过合适的标签和属性描述页面结构和内容，使得页面具有良好的结构化和语义化，为用户提供良好的浏览体验。","material-symbols:format-h5",[],[],{"title":970,"_path":971,"description":972,"icon":973,"tags":974,"categories":975},"Json","/tags/textformats/json","JSON是一种简单、通用且易于理解的数据格式，广泛应用于各种领域，特别是在Web开发中扮演着重要的角色。","mdi:code-json",[],[],{"title":977,"_path":978,"description":979,"icon":980,"tags":981,"categories":982},"Json5","/tags/textformats/json5","JSON5 是 JSON 的一种扩展格式，通过引入更多的语法和功能，使得 JSON 数据的编写和阅读更加灵活和方便。它保留了 JSON 的兼容性和简洁性，同时提供了额外的特性，适用于需要更复杂数据结构和更人性化编写风格的应用场景。","file-icons:json5",[],[],{"title":984,"_path":985,"description":986,"icon":987,"tags":988,"categories":989},"Markdown","/tags/textformats/md","Markdown作为一种轻量级的标记语言，不仅简化了HTML的书写，还具有简洁、易读、扩展性强等优点，使其在各种场景下都有广泛的应用。无论是开发者、写作人员还是个人用户，Markdown都能提供简便快捷、高效美观的文本编辑和发布体验。","vscode-icons:file-type-markdown",[],[],{"title":991,"_path":992,"description":993,"icon":994,"tags":995,"categories":996},"Mermaid","/tags/textformats/mermaid","Mermaid 是一个功能强大且易于使用的图表绘制工具，适用于多种场景下的流程图、序列图和甘特图等需求。它通过简单的文本描述语言和丰富的图表类型，帮助用户快速创建和展示复杂的数据流程和关系，是软件开发、项目管理和教育培训等领域中的有力工具。","twemoji:mermaid",[],[],{"title":998,"_path":999,"description":1000,"icon":1001,"tags":1002,"categories":1003},"XML","/tags/textformats/xml","XML是一种强大而灵活的数据描述和交换工具，广泛应用于各种需要处理结构化数据的场景。如需更深入的了解XML的相关知识和应用，建议查阅专业的编程或软件开发相关书籍和资料。","devicon:xml",[],[],{"title":1005,"_path":1006,"description":1007,"icon":1001,"tags":1008,"categories":1009},"XSL","/tags/textformats/xsl","XSL 家族的语言提供了丰富的工具和技术，用于 XML 文档的转换、呈现和格式化，适用于各种应用场景，从简单的数据转换到复杂的文档排版和打印输出。",[],[],{"title":1011,"_path":1012,"description":1013,"icon":1014,"tags":1015,"categories":1016},"YAML","/tags/textformats/yaml","YAML是一种简洁、易读且功能丰富的数据序列化格式，适用于配置文件、数据交换和其他场景，为开发者提供了一种方便和直观的数据表示方式.","file-icons:yaml-alt1",[],[],"material-symbols:format-shapes",9,[],[],{"title":70,"_path":1022,"children":1023,"icon":1106,"$isDir":37,"$fileCount":1107,"$dirCount":39,"$totalFileCount":1107,"$totalDirCount":39,"tags":1108,"categories":1109},"/tags/tools",[1024,1030,1037,1044,1051,1058,1065,1071,1078,1085,1092,1099],{"title":1025,"_path":1026,"description":1027,"tags":1028,"categories":1029},"Apache APISIX","/tags/tools/apisix","Apache APISIX 是一个开源、高性能的 API 网关和微服务管理平台，旨在处理 API 请求的路由、认证、负载均衡、限流、监控等功能。它支持动态配置，能够满足高并发、高可用性的场景需求。",[],[],{"title":1031,"_path":1032,"description":1033,"icon":1034,"tags":1035,"categories":1036},"Figma","/tags/tools/figma","Figma是一款向量图形编辑软件，在设计和玩具领域都有广泛的应用和认可，是一款功能强大、灵活且易于使用的工具。无论是设计师还是模型爱好者，都能从中找到适合自己的功能和乐趣。","logos:figma",[],[],{"title":1038,"_path":1039,"description":1040,"icon":1041,"tags":1042,"categories":1043},"Github","/tags/tools/github","GitHub是一个功能强大的代码托管平台，为开发者提供了丰富的工具和功能，帮助他们更高效地进行代码管理、协作和部署。GitHub的广泛应用和活跃的开发者社区使其成为全球最受欢迎的代码托管平台之一","carbon:logo-github",[],[],{"title":1045,"_path":1046,"description":1047,"icon":1048,"tags":1049,"categories":1050},"Gitlab","/tags/tools/gitlab","GitLab是一个功能强大、灵活且易于使用的仓库管理系统，适用于各种规模和类型的团队和组织，用于管理代码、协作开发和提高开发效率。如需了解更多，可以访问GitLab的官网，获取更详细的信息和使用教程。","logos:gitlab",[],[],{"title":1052,"_path":1053,"description":1054,"icon":1055,"tags":1056,"categories":1057},"n8n","/tags/tools/n8n","N8N 是一个功能强大且灵活的工作流自动化工具，通过其直观的可视化界面和丰富的节点类型，使用户能够轻松创建和管理复杂的自动化任务和流程。无论是个人用户还是企业团队，N8N 都可以帮助他们提高效率，减少手动操作，优化工作流程。由于其开源和自托管的特性，N8N 也特别适合那些对数据隐私和安全有较高要求的用户。","simple-icons:n8n",[],[],{"title":1059,"_path":1060,"description":1061,"icon":1062,"tags":1063,"categories":1064},"Postman","/tags/tools/postman","Postman是一个功能强大、易于使用的接口测试工具，适用于各种规模和复杂度的项目。它能够帮助开发团队提高测试效率，减少bug数量，从而提升产品的质量和用户体验。","logos:postman-icon",[],[],{"title":1066,"_path":1067,"description":1068,"icon":610,"tags":1069,"categories":1070},"Redis Desktop Manager","/tags/tools/redis-desktop","Redis Desktop Manager 是一个功能丰富的 Redis 客户端应用程序，通过提供直观的 GUI 界面和丰富的管理功能，简化了 Redis 数据库的连接、操作和管理过程。它适用于各种使用场景，帮助用户提高 Redis 数据库的使用效率和管理效果。",[],[],{"title":1072,"_path":1073,"description":1074,"icon":1075,"tags":1076,"categories":1077},"Sublime Text","/tags/tools/sublimetext","Sublime Text是一款非常优秀的文本编辑器和代码编辑器，具有强大的功能和良好的扩展性，适用于各种不同类型的用户。无论是初学者还是经验丰富的开发者，都可以通过使用Sublime Text来提高编码效率和代码质量。","logos:sublimetext-icon",[],[],{"title":1079,"_path":1080,"description":1081,"icon":1082,"tags":1083,"categories":1084},"Typora","/tags/tools/typora","Typora 是一款优秀的 Markdown 编辑器，结合其所见即所得的编辑模式、丰富的功能和跨平台支持，使得它成为许多用户首选的 Markdown 编辑工具。无论是写作、编辑、技术文档制作还是学术写作，Typora 都能提供高效、直观且愉悦的写作体验。","material-symbols:text-fields",[],[],{"title":1086,"_path":1087,"description":1088,"icon":1089,"tags":1090,"categories":1091},"Visual Studio","/tags/tools/vs","Visual Studio是一款功能强大且全面的集成开发环","logos:visual-studio",[],[],{"title":1093,"_path":1094,"description":1095,"icon":1096,"tags":1097,"categories":1098},"VScode","/tags/tools/vscode","Visual Studio Code（简称VSCode）是由微软开发的免费开源跨平台代码编辑器。它具有丰富的功能和扩展生态系统，适用于多种编程语言和技术栈。","logos:visual-studio-code",[],[],{"title":1100,"_path":1101,"description":1102,"icon":1103,"tags":1104,"categories":1105},"Webpack","/tags/tools/webpack","Webpack是一个功能强大、灵活且易于扩展的前端构建工具，它已经成为绝大多数企业中前端项目打包构建的首选工具。通过使用Webpack，开发者可以更高效地管理前端资源，提高项目的可维护性和性能。","logos:webpack",[],[],"carbon:debug",12,[],[],"ic:outline-tag",10,92,[],[],{"title":1116,"_path":1117,"children":1118,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":1129,"categories":1130},"文档","/docs",[1119,1124],{"title":1120,"_path":1121,"description":7,"tags":1122,"categories":1123},"Guide","/docs/guide",[],[],{"title":1125,"_path":1126,"description":7,"tags":1127,"categories":1128},"向往","/docs/wmsxwd",[],[],[],[],{"title":1132,"_path":1133,"children":1134,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":1146,"categories":1147},"关于","/about",[1135,1141],{"title":1136,"_path":1137,"description":7,"layout":1138,"tags":1139,"categories":1140},"关于 VVLL.net","/about/about","about",[],[],{"title":1142,"_path":1143,"description":7,"layout":1138,"tags":1144,"categories":1145},"Package Info","/about/pkg",[],[],[],[],{"title":1149,"_path":1150,"children":1151,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":1163,"categories":1164},"作者","/authors",[1152,1158],{"title":1153,"_path":1154,"date":1155,"tags":1156,"description":7,"categories":1157},"IczpNet(思源)","/authors/iczp","2024-06-14T00:00:00.000Z",[34,837],[],{"title":1159,"_path":1160,"date":1155,"tags":1161,"description":7,"categories":1162},"Zhongpei(心雨)","/authors/zhongpei",[34,837],[],[],[],{"title":1166,"_path":1167,"children":1168,"$isDir":37,"$fileCount":54,"$dirCount":39,"$totalFileCount":54,"$totalDirCount":39,"tags":1175,"categories":1176},"博客","/posts",[1169],{"title":1170,"_path":1171,"description":1172,"tags":1173,"categories":1174},"正则表达式手册(Regex)","/posts/regex","正则表达式（Regular Expressions,简称 Regex）是一种用于匹配字符串的模式。它在文本处理、数据验证和提取等方面非常强大和灵活。以下是详细的 Regex 语法手册,并附有示例说明。",[],[],[],[],{"title":1178,"_path":1179,"children":1180,"$isDir":37,"$fileCount":333,"$dirCount":39,"$totalFileCount":333,"$totalDirCount":39,"tags":1206,"categories":1207},"项目","/projects",[1181,1195,1201],{"title":1182,"_path":1183,"tags":1184,"description":7,"layout":64,"categories":1194},"ChatMaxim 桌面端(Electron + Vite + Vue3)","/projects/chatmaxim-electron-vite",[34,84,85,1185,85,1186,1187,1188,1189,1190,1191,1192,1193],"websocket","sql","mssql","mysql","sqlite","redis","docker","nuxtjs","electron",[],{"title":1196,"_path":1197,"tags":1198,"description":1199,"layout":64,"categories":1200},"ChatMaxim 移动端(Flutter)","/projects/chatmaxim-flutter",[34,84,85],"VVLL.net（Vite Vue Link Lab）是一个网站，主要提供关于Vite、Vue和相关开发文档的资源和信息。以下是该网站的主要内容和特点：",[],{"title":1202,"_path":1203,"tags":1204,"description":1199,"layout":64,"categories":1205},"Nuxt3 VVLL","/projects/nuxt-vvll",[34,84,85],[],[],[],{"title":1209,"_path":1210,"children":1211,"$isDir":37,"$fileCount":38,"$dirCount":39,"$totalFileCount":38,"$totalDirCount":39,"tags":1224,"categories":1225},"Sub","/sub",[1212,1218],{"title":1213,"_path":1214,"tags":1215,"description":1216,"layout":64,"categories":1217},"sub Guide.md","/sub/guide",[34,84,85],"Back to Home",[],{"title":1219,"_path":1220,"description":1221,"layout":64,"tags":1222,"categories":1223},"sub other.md","/sub/other","sub index",[],[],[],[],{"_path":317,"_dir":1227,"_draft":9,"_partial":9,"_locale":7,"title":316,"description":319,"tags":26,"author":23,"date":24,"body":1228,"_type":3958,"_id":3959,"_source":3960,"_file":3961,"_extension":3962},"object",{"type":1229,"children":1230,"toc":3952},"root",[1231,1238,1257,1269,1281,3941,3946],{"type":1232,"tag":1233,"props":1234,"children":1235},"element","h2",{"id":316},[1236],{"type":1237,"value":316},"text",{"type":1232,"tag":1239,"props":1240,"children":1241},"blockquote",{},[1242],{"type":1232,"tag":1243,"props":1244,"children":1245},"p",{},[1246,1248,1255],{"type":1237,"value":1247},"在 TypeScript 中，",{"type":1232,"tag":1249,"props":1250,"children":1252},"code",{"className":1251},[],[1253],{"type":1237,"value":1254},"Object",{"type":1237,"value":1256}," 是 JavaScript 中的基本对象类型，包含多种方法来操作和处理对象。",{"type":1232,"tag":1243,"props":1258,"children":1259},{},[1260,1262,1267],{"type":1237,"value":1261},"以下是 ",{"type":1232,"tag":1249,"props":1263,"children":1265},{"className":1264},[],[1266],{"type":1237,"value":1254},{"type":1237,"value":1268}," 的常用方法及其描述：",{"type":1232,"tag":1270,"props":1271,"children":1273},"h3",{"id":1272},"object-类的静态方法",[1274,1279],{"type":1232,"tag":1249,"props":1275,"children":1277},{"className":1276},[],[1278],{"type":1237,"value":1254},{"type":1237,"value":1280}," 类的静态方法",{"type":1232,"tag":1282,"props":1283,"children":1284},"ol",{},[1285,1458,1759,1902,2112,2226,2348,2472,2580,2683,2812,2912,3105,3226,3313,3400,3503,3612,3721,3838],{"type":1232,"tag":1286,"props":1287,"children":1288},"li",{},[1289,1299,1301],{"type":1232,"tag":1290,"props":1291,"children":1292},"strong",{},[1293],{"type":1232,"tag":1249,"props":1294,"children":1296},{"className":1295},[],[1297],{"type":1237,"value":1298},"Object.assign(target, ...sources)",{"type":1237,"value":1300},"：",{"type":1232,"tag":1302,"props":1303,"children":1304},"ul",{},[1305,1309],{"type":1232,"tag":1286,"props":1306,"children":1307},{},[1308],{"type":1237,"value":325},{"type":1232,"tag":1286,"props":1310,"children":1311},{},[1312],{"type":1232,"tag":1313,"props":1314,"children":1318},"pre",{"className":1315,"code":1316,"language":1317,"meta":7,"style":7},"language-typescript shiki shiki-themes github-dark github-dark monokai","const target = { a: 1 };\nconst source = { b: 2, c: 3 };\nconst result = Object.assign(target, source);\nconsole.log(result); // 输出: { a: 1, b: 2, c: 3 }\n","typescript",[1319],{"type":1232,"tag":1249,"props":1320,"children":1321},{"__ignoreMap":7},[1322,1362,1402,1434],{"type":1232,"tag":1323,"props":1324,"children":1326},"span",{"class":1325,"line":54},"line",[1327,1333,1339,1345,1351,1357],{"type":1232,"tag":1323,"props":1328,"children":1330},{"style":1329},"--shiki-default:#F97583;--shiki-dark:#F97583;--shiki-sepia:#66D9EF;--shiki-default-font-style:inherit;--shiki-dark-font-style:inherit;--shiki-sepia-font-style:italic",[1331],{"type":1237,"value":1332},"const",{"type":1232,"tag":1323,"props":1334,"children":1336},{"style":1335},"--shiki-default:#79B8FF;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2",[1337],{"type":1237,"value":1338}," target",{"type":1232,"tag":1323,"props":1340,"children":1342},{"style":1341},"--shiki-default:#F97583;--shiki-dark:#F97583;--shiki-sepia:#F92672",[1343],{"type":1237,"value":1344}," =",{"type":1232,"tag":1323,"props":1346,"children":1348},{"style":1347},"--shiki-default:#E1E4E8;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2",[1349],{"type":1237,"value":1350}," { a: ",{"type":1232,"tag":1323,"props":1352,"children":1354},{"style":1353},"--shiki-default:#79B8FF;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF",[1355],{"type":1237,"value":1356},"1",{"type":1232,"tag":1323,"props":1358,"children":1359},{"style":1347},[1360],{"type":1237,"value":1361}," };\n",{"type":1232,"tag":1323,"props":1363,"children":1364},{"class":1325,"line":38},[1365,1369,1374,1378,1383,1388,1393,1398],{"type":1232,"tag":1323,"props":1366,"children":1367},{"style":1329},[1368],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1370,"children":1371},{"style":1335},[1372],{"type":1237,"value":1373}," source",{"type":1232,"tag":1323,"props":1375,"children":1376},{"style":1341},[1377],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1379,"children":1380},{"style":1347},[1381],{"type":1237,"value":1382}," { b: ",{"type":1232,"tag":1323,"props":1384,"children":1385},{"style":1353},[1386],{"type":1237,"value":1387},"2",{"type":1232,"tag":1323,"props":1389,"children":1390},{"style":1347},[1391],{"type":1237,"value":1392},", c: ",{"type":1232,"tag":1323,"props":1394,"children":1395},{"style":1353},[1396],{"type":1237,"value":1397},"3",{"type":1232,"tag":1323,"props":1399,"children":1400},{"style":1347},[1401],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":1403,"children":1404},{"class":1325,"line":333},[1405,1409,1414,1418,1423,1429],{"type":1232,"tag":1323,"props":1406,"children":1407},{"style":1329},[1408],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1410,"children":1411},{"style":1335},[1412],{"type":1237,"value":1413}," result",{"type":1232,"tag":1323,"props":1415,"children":1416},{"style":1341},[1417],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1419,"children":1420},{"style":1347},[1421],{"type":1237,"value":1422}," Object.",{"type":1232,"tag":1323,"props":1424,"children":1426},{"style":1425},"--shiki-default:#B392F0;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E",[1427],{"type":1237,"value":1428},"assign",{"type":1232,"tag":1323,"props":1430,"children":1431},{"style":1347},[1432],{"type":1237,"value":1433},"(target, source);\n",{"type":1232,"tag":1323,"props":1435,"children":1436},{"class":1325,"line":98},[1437,1442,1447,1452],{"type":1232,"tag":1323,"props":1438,"children":1439},{"style":1347},[1440],{"type":1237,"value":1441},"console.",{"type":1232,"tag":1323,"props":1443,"children":1444},{"style":1425},[1445],{"type":1237,"value":1446},"log",{"type":1232,"tag":1323,"props":1448,"children":1449},{"style":1347},[1450],{"type":1237,"value":1451},"(result); ",{"type":1232,"tag":1323,"props":1453,"children":1455},{"style":1454},"--shiki-default:#6A737D;--shiki-dark:#6A737D;--shiki-sepia:#88846F",[1456],{"type":1237,"value":1457},"// 输出: { a: 1, b: 2, c: 3 }\n",{"type":1232,"tag":1286,"props":1459,"children":1460},{},[1461,1470,1471],{"type":1232,"tag":1290,"props":1462,"children":1463},{},[1464],{"type":1232,"tag":1249,"props":1465,"children":1467},{"className":1466},[],[1468],{"type":1237,"value":1469},"Object.create(proto, [propertiesObject])",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":1472,"children":1473},{},[1474,1479],{"type":1232,"tag":1286,"props":1475,"children":1476},{},[1477],{"type":1237,"value":1478},"使用指定的原型对象和可选的属性描述符创建一个新对象。",{"type":1232,"tag":1286,"props":1480,"children":1481},{},[1482],{"type":1232,"tag":1313,"props":1483,"children":1485},{"className":1315,"code":1484,"language":1317,"meta":7,"style":7},"const person = {\n  isHuman: false,\n  printIntroduction: function () {\n    console.log(`My name is ${this.name}. Am I human? ${this.isHuman}`);\n  },\n};\n\nconst me = Object.create(person);\nme.name = 'Matthew';\nme.isHuman = true;\nme.printIntroduction(); // 输出: My name is Matthew. Am I human? true\n",[1486],{"type":1232,"tag":1249,"props":1487,"children":1488},{"__ignoreMap":7},[1489,1510,1528,1551,1638,1646,1654,1662,1692,1715,1736],{"type":1232,"tag":1323,"props":1490,"children":1491},{"class":1325,"line":54},[1492,1496,1501,1505],{"type":1232,"tag":1323,"props":1493,"children":1494},{"style":1329},[1495],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1497,"children":1498},{"style":1335},[1499],{"type":1237,"value":1500}," person",{"type":1232,"tag":1323,"props":1502,"children":1503},{"style":1341},[1504],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1506,"children":1507},{"style":1347},[1508],{"type":1237,"value":1509}," {\n",{"type":1232,"tag":1323,"props":1511,"children":1512},{"class":1325,"line":38},[1513,1518,1523],{"type":1232,"tag":1323,"props":1514,"children":1515},{"style":1347},[1516],{"type":1237,"value":1517},"  isHuman: ",{"type":1232,"tag":1323,"props":1519,"children":1520},{"style":1353},[1521],{"type":1237,"value":1522},"false",{"type":1232,"tag":1323,"props":1524,"children":1525},{"style":1347},[1526],{"type":1237,"value":1527},",\n",{"type":1232,"tag":1323,"props":1529,"children":1530},{"class":1325,"line":333},[1531,1536,1541,1546],{"type":1232,"tag":1323,"props":1532,"children":1533},{"style":1425},[1534],{"type":1237,"value":1535},"  printIntroduction",{"type":1232,"tag":1323,"props":1537,"children":1538},{"style":1347},[1539],{"type":1237,"value":1540},": ",{"type":1232,"tag":1323,"props":1542,"children":1543},{"style":1329},[1544],{"type":1237,"value":1545},"function",{"type":1232,"tag":1323,"props":1547,"children":1548},{"style":1347},[1549],{"type":1237,"value":1550}," () {\n",{"type":1232,"tag":1323,"props":1552,"children":1553},{"class":1325,"line":98},[1554,1559,1563,1568,1574,1580,1586,1592,1597,1602,1607,1611,1615,1619,1624,1628,1633],{"type":1232,"tag":1323,"props":1555,"children":1556},{"style":1347},[1557],{"type":1237,"value":1558},"    console.",{"type":1232,"tag":1323,"props":1560,"children":1561},{"style":1425},[1562],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":1564,"children":1565},{"style":1347},[1566],{"type":1237,"value":1567},"(",{"type":1232,"tag":1323,"props":1569,"children":1571},{"style":1570},"--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74",[1572],{"type":1237,"value":1573},"`My name is ",{"type":1232,"tag":1323,"props":1575,"children":1577},{"style":1576},"--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF;--shiki-sepia:#F92672",[1578],{"type":1237,"value":1579},"${",{"type":1232,"tag":1323,"props":1581,"children":1583},{"style":1582},"--shiki-default:#79B8FF;--shiki-dark:#79B8FF;--shiki-sepia:#FD971F",[1584],{"type":1237,"value":1585},"this",{"type":1232,"tag":1323,"props":1587,"children":1589},{"style":1588},"--shiki-default:#9ECBFF;--shiki-dark:#9ECBFF;--shiki-sepia:#F8F8F2",[1590],{"type":1237,"value":1591},".",{"type":1232,"tag":1323,"props":1593,"children":1594},{"style":1347},[1595],{"type":1237,"value":1596},"name",{"type":1232,"tag":1323,"props":1598,"children":1599},{"style":1576},[1600],{"type":1237,"value":1601},"}",{"type":1232,"tag":1323,"props":1603,"children":1604},{"style":1570},[1605],{"type":1237,"value":1606},". Am I human? ",{"type":1232,"tag":1323,"props":1608,"children":1609},{"style":1576},[1610],{"type":1237,"value":1579},{"type":1232,"tag":1323,"props":1612,"children":1613},{"style":1582},[1614],{"type":1237,"value":1585},{"type":1232,"tag":1323,"props":1616,"children":1617},{"style":1588},[1618],{"type":1237,"value":1591},{"type":1232,"tag":1323,"props":1620,"children":1621},{"style":1347},[1622],{"type":1237,"value":1623},"isHuman",{"type":1232,"tag":1323,"props":1625,"children":1626},{"style":1576},[1627],{"type":1237,"value":1601},{"type":1232,"tag":1323,"props":1629,"children":1630},{"style":1570},[1631],{"type":1237,"value":1632},"`",{"type":1232,"tag":1323,"props":1634,"children":1635},{"style":1347},[1636],{"type":1237,"value":1637},");\n",{"type":1232,"tag":1323,"props":1639,"children":1640},{"class":1325,"line":384},[1641],{"type":1232,"tag":1323,"props":1642,"children":1643},{"style":1347},[1644],{"type":1237,"value":1645},"  },\n",{"type":1232,"tag":1323,"props":1647,"children":1648},{"class":1325,"line":400},[1649],{"type":1232,"tag":1323,"props":1650,"children":1651},{"style":1347},[1652],{"type":1237,"value":1653},"};\n",{"type":1232,"tag":1323,"props":1655,"children":1656},{"class":1325,"line":308},[1657],{"type":1232,"tag":1323,"props":1658,"children":1659},{"emptyLinePlaceholder":37},[1660],{"type":1237,"value":1661},"\n",{"type":1232,"tag":1323,"props":1663,"children":1664},{"class":1325,"line":620},[1665,1669,1674,1678,1682,1687],{"type":1232,"tag":1323,"props":1666,"children":1667},{"style":1329},[1668],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1670,"children":1671},{"style":1335},[1672],{"type":1237,"value":1673}," me",{"type":1232,"tag":1323,"props":1675,"children":1676},{"style":1341},[1677],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1679,"children":1680},{"style":1347},[1681],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":1683,"children":1684},{"style":1425},[1685],{"type":1237,"value":1686},"create",{"type":1232,"tag":1323,"props":1688,"children":1689},{"style":1347},[1690],{"type":1237,"value":1691},"(person);\n",{"type":1232,"tag":1323,"props":1693,"children":1694},{"class":1325,"line":1018},[1695,1700,1705,1710],{"type":1232,"tag":1323,"props":1696,"children":1697},{"style":1347},[1698],{"type":1237,"value":1699},"me.name ",{"type":1232,"tag":1323,"props":1701,"children":1702},{"style":1341},[1703],{"type":1237,"value":1704},"=",{"type":1232,"tag":1323,"props":1706,"children":1707},{"style":1570},[1708],{"type":1237,"value":1709}," 'Matthew'",{"type":1232,"tag":1323,"props":1711,"children":1712},{"style":1347},[1713],{"type":1237,"value":1714},";\n",{"type":1232,"tag":1323,"props":1716,"children":1717},{"class":1325,"line":1111},[1718,1723,1727,1732],{"type":1232,"tag":1323,"props":1719,"children":1720},{"style":1347},[1721],{"type":1237,"value":1722},"me.isHuman ",{"type":1232,"tag":1323,"props":1724,"children":1725},{"style":1341},[1726],{"type":1237,"value":1704},{"type":1232,"tag":1323,"props":1728,"children":1729},{"style":1353},[1730],{"type":1237,"value":1731}," true",{"type":1232,"tag":1323,"props":1733,"children":1734},{"style":1347},[1735],{"type":1237,"value":1714},{"type":1232,"tag":1323,"props":1737,"children":1738},{"class":1325,"line":402},[1739,1744,1749,1754],{"type":1232,"tag":1323,"props":1740,"children":1741},{"style":1347},[1742],{"type":1237,"value":1743},"me.",{"type":1232,"tag":1323,"props":1745,"children":1746},{"style":1425},[1747],{"type":1237,"value":1748},"printIntroduction",{"type":1232,"tag":1323,"props":1750,"children":1751},{"style":1347},[1752],{"type":1237,"value":1753},"(); ",{"type":1232,"tag":1323,"props":1755,"children":1756},{"style":1454},[1757],{"type":1237,"value":1758},"// 输出: My name is Matthew. Am I human? true\n",{"type":1232,"tag":1286,"props":1760,"children":1761},{},[1762,1771,1772],{"type":1232,"tag":1290,"props":1763,"children":1764},{},[1765],{"type":1232,"tag":1249,"props":1766,"children":1768},{"className":1767},[],[1769],{"type":1237,"value":1770},"Object.defineProperty(obj, prop, descriptor)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":1773,"children":1774},{},[1775,1780],{"type":1232,"tag":1286,"props":1776,"children":1777},{},[1778],{"type":1237,"value":1779},"直接在对象上定义一个新属性，或者修改对象的现有属性，并返回该对象。",{"type":1232,"tag":1286,"props":1781,"children":1782},{},[1783],{"type":1232,"tag":1313,"props":1784,"children":1786},{"className":1315,"code":1785,"language":1317,"meta":7,"style":7},"const obj = {};\nObject.defineProperty(obj, 'a', {\n  value: 42,\n  writable: true,\n});\nconsole.log(obj.a); // 输出: 42\n",[1787],{"type":1232,"tag":1249,"props":1788,"children":1789},{"__ignoreMap":7},[1790,1811,1839,1856,1873,1881],{"type":1232,"tag":1323,"props":1791,"children":1792},{"class":1325,"line":54},[1793,1797,1802,1806],{"type":1232,"tag":1323,"props":1794,"children":1795},{"style":1329},[1796],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1798,"children":1799},{"style":1335},[1800],{"type":1237,"value":1801}," obj",{"type":1232,"tag":1323,"props":1803,"children":1804},{"style":1341},[1805],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1807,"children":1808},{"style":1347},[1809],{"type":1237,"value":1810}," {};\n",{"type":1232,"tag":1323,"props":1812,"children":1813},{"class":1325,"line":38},[1814,1819,1824,1829,1834],{"type":1232,"tag":1323,"props":1815,"children":1816},{"style":1347},[1817],{"type":1237,"value":1818},"Object.",{"type":1232,"tag":1323,"props":1820,"children":1821},{"style":1425},[1822],{"type":1237,"value":1823},"defineProperty",{"type":1232,"tag":1323,"props":1825,"children":1826},{"style":1347},[1827],{"type":1237,"value":1828},"(obj, ",{"type":1232,"tag":1323,"props":1830,"children":1831},{"style":1570},[1832],{"type":1237,"value":1833},"'a'",{"type":1232,"tag":1323,"props":1835,"children":1836},{"style":1347},[1837],{"type":1237,"value":1838},", {\n",{"type":1232,"tag":1323,"props":1840,"children":1841},{"class":1325,"line":333},[1842,1847,1852],{"type":1232,"tag":1323,"props":1843,"children":1844},{"style":1347},[1845],{"type":1237,"value":1846},"  value: ",{"type":1232,"tag":1323,"props":1848,"children":1849},{"style":1353},[1850],{"type":1237,"value":1851},"42",{"type":1232,"tag":1323,"props":1853,"children":1854},{"style":1347},[1855],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":1857,"children":1858},{"class":1325,"line":98},[1859,1864,1869],{"type":1232,"tag":1323,"props":1860,"children":1861},{"style":1347},[1862],{"type":1237,"value":1863},"  writable: ",{"type":1232,"tag":1323,"props":1865,"children":1866},{"style":1353},[1867],{"type":1237,"value":1868},"true",{"type":1232,"tag":1323,"props":1870,"children":1871},{"style":1347},[1872],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":1874,"children":1875},{"class":1325,"line":384},[1876],{"type":1232,"tag":1323,"props":1877,"children":1878},{"style":1347},[1879],{"type":1237,"value":1880},"});\n",{"type":1232,"tag":1323,"props":1882,"children":1883},{"class":1325,"line":400},[1884,1888,1892,1897],{"type":1232,"tag":1323,"props":1885,"children":1886},{"style":1347},[1887],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":1889,"children":1890},{"style":1425},[1891],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":1893,"children":1894},{"style":1347},[1895],{"type":1237,"value":1896},"(obj.a); ",{"type":1232,"tag":1323,"props":1898,"children":1899},{"style":1454},[1900],{"type":1237,"value":1901},"// 输出: 42\n",{"type":1232,"tag":1286,"props":1903,"children":1904},{},[1905,1914,1915],{"type":1232,"tag":1290,"props":1906,"children":1907},{},[1908],{"type":1232,"tag":1249,"props":1909,"children":1911},{"className":1910},[],[1912],{"type":1237,"value":1913},"Object.defineProperties(obj, props)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":1916,"children":1917},{},[1918,1923],{"type":1232,"tag":1286,"props":1919,"children":1920},{},[1921],{"type":1237,"value":1922},"直接在对象上定义一个或多个新的属性或修改现有属性，返回该对象。",{"type":1232,"tag":1286,"props":1924,"children":1925},{},[1926],{"type":1232,"tag":1313,"props":1927,"children":1929},{"className":1315,"code":1928,"language":1317,"meta":7,"style":7},"const obj = {};\nObject.defineProperties(obj, {\n  property1: {\n    value: true,\n    writable: true,\n  },\n  property2: {\n    value: 'Hello',\n    writable: false,\n  },\n});\nconsole.log(obj.property1); // 输出: true\nconsole.log(obj.property2); // 输出: Hello\n",[1930],{"type":1232,"tag":1249,"props":1931,"children":1932},{"__ignoreMap":7},[1933,1952,1969,1977,1993,2009,2016,2024,2040,2055,2062,2069,2090],{"type":1232,"tag":1323,"props":1934,"children":1935},{"class":1325,"line":54},[1936,1940,1944,1948],{"type":1232,"tag":1323,"props":1937,"children":1938},{"style":1329},[1939],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":1941,"children":1942},{"style":1335},[1943],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":1945,"children":1946},{"style":1341},[1947],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":1949,"children":1950},{"style":1347},[1951],{"type":1237,"value":1810},{"type":1232,"tag":1323,"props":1953,"children":1954},{"class":1325,"line":38},[1955,1959,1964],{"type":1232,"tag":1323,"props":1956,"children":1957},{"style":1347},[1958],{"type":1237,"value":1818},{"type":1232,"tag":1323,"props":1960,"children":1961},{"style":1425},[1962],{"type":1237,"value":1963},"defineProperties",{"type":1232,"tag":1323,"props":1965,"children":1966},{"style":1347},[1967],{"type":1237,"value":1968},"(obj, {\n",{"type":1232,"tag":1323,"props":1970,"children":1971},{"class":1325,"line":333},[1972],{"type":1232,"tag":1323,"props":1973,"children":1974},{"style":1347},[1975],{"type":1237,"value":1976},"  property1: {\n",{"type":1232,"tag":1323,"props":1978,"children":1979},{"class":1325,"line":98},[1980,1985,1989],{"type":1232,"tag":1323,"props":1981,"children":1982},{"style":1347},[1983],{"type":1237,"value":1984},"    value: ",{"type":1232,"tag":1323,"props":1986,"children":1987},{"style":1353},[1988],{"type":1237,"value":1868},{"type":1232,"tag":1323,"props":1990,"children":1991},{"style":1347},[1992],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":1994,"children":1995},{"class":1325,"line":384},[1996,2001,2005],{"type":1232,"tag":1323,"props":1997,"children":1998},{"style":1347},[1999],{"type":1237,"value":2000},"    writable: ",{"type":1232,"tag":1323,"props":2002,"children":2003},{"style":1353},[2004],{"type":1237,"value":1868},{"type":1232,"tag":1323,"props":2006,"children":2007},{"style":1347},[2008],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":2010,"children":2011},{"class":1325,"line":400},[2012],{"type":1232,"tag":1323,"props":2013,"children":2014},{"style":1347},[2015],{"type":1237,"value":1645},{"type":1232,"tag":1323,"props":2017,"children":2018},{"class":1325,"line":308},[2019],{"type":1232,"tag":1323,"props":2020,"children":2021},{"style":1347},[2022],{"type":1237,"value":2023},"  property2: {\n",{"type":1232,"tag":1323,"props":2025,"children":2026},{"class":1325,"line":620},[2027,2031,2036],{"type":1232,"tag":1323,"props":2028,"children":2029},{"style":1347},[2030],{"type":1237,"value":1984},{"type":1232,"tag":1323,"props":2032,"children":2033},{"style":1570},[2034],{"type":1237,"value":2035},"'Hello'",{"type":1232,"tag":1323,"props":2037,"children":2038},{"style":1347},[2039],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":2041,"children":2042},{"class":1325,"line":1018},[2043,2047,2051],{"type":1232,"tag":1323,"props":2044,"children":2045},{"style":1347},[2046],{"type":1237,"value":2000},{"type":1232,"tag":1323,"props":2048,"children":2049},{"style":1353},[2050],{"type":1237,"value":1522},{"type":1232,"tag":1323,"props":2052,"children":2053},{"style":1347},[2054],{"type":1237,"value":1527},{"type":1232,"tag":1323,"props":2056,"children":2057},{"class":1325,"line":1111},[2058],{"type":1232,"tag":1323,"props":2059,"children":2060},{"style":1347},[2061],{"type":1237,"value":1645},{"type":1232,"tag":1323,"props":2063,"children":2064},{"class":1325,"line":402},[2065],{"type":1232,"tag":1323,"props":2066,"children":2067},{"style":1347},[2068],{"type":1237,"value":1880},{"type":1232,"tag":1323,"props":2070,"children":2071},{"class":1325,"line":1107},[2072,2076,2080,2085],{"type":1232,"tag":1323,"props":2073,"children":2074},{"style":1347},[2075],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2077,"children":2078},{"style":1425},[2079],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2081,"children":2082},{"style":1347},[2083],{"type":1237,"value":2084},"(obj.property1); ",{"type":1232,"tag":1323,"props":2086,"children":2087},{"style":1454},[2088],{"type":1237,"value":2089},"// 输出: true\n",{"type":1232,"tag":1323,"props":2091,"children":2093},{"class":1325,"line":2092},13,[2094,2098,2102,2107],{"type":1232,"tag":1323,"props":2095,"children":2096},{"style":1347},[2097],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2099,"children":2100},{"style":1425},[2101],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2103,"children":2104},{"style":1347},[2105],{"type":1237,"value":2106},"(obj.property2); ",{"type":1232,"tag":1323,"props":2108,"children":2109},{"style":1454},[2110],{"type":1237,"value":2111},"// 输出: Hello\n",{"type":1232,"tag":1286,"props":2113,"children":2114},{},[2115,2124,2125],{"type":1232,"tag":1290,"props":2116,"children":2117},{},[2118],{"type":1232,"tag":1249,"props":2119,"children":2121},{"className":2120},[],[2122],{"type":1237,"value":2123},"Object.entries(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2126,"children":2127},{},[2128,2141],{"type":1232,"tag":1286,"props":2129,"children":2130},{},[2131,2133,2139],{"type":1237,"value":2132},"返回一个给定对象自身可枚举属性的键值对数组，其排列顺序与使用 ",{"type":1232,"tag":1249,"props":2134,"children":2136},{"className":2135},[],[2137],{"type":1237,"value":2138},"for...in",{"type":1237,"value":2140}," 循环遍历该对象时返回的顺序一致。",{"type":1232,"tag":1286,"props":2142,"children":2143},{},[2144],{"type":1232,"tag":1313,"props":2145,"children":2147},{"className":1315,"code":2146,"language":1317,"meta":7,"style":7},"const obj = { a: 1, b: 2, c: 3 };\nconsole.log(Object.entries(obj)); // 输出: [['a', 1], ['b', 2], ['c', 3]]\n",[2148],{"type":1232,"tag":1249,"props":2149,"children":2150},{"__ignoreMap":7},[2151,2195],{"type":1232,"tag":1323,"props":2152,"children":2153},{"class":1325,"line":54},[2154,2158,2162,2166,2170,2174,2179,2183,2187,2191],{"type":1232,"tag":1323,"props":2155,"children":2156},{"style":1329},[2157],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2159,"children":2160},{"style":1335},[2161],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2163,"children":2164},{"style":1341},[2165],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2167,"children":2168},{"style":1347},[2169],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":2171,"children":2172},{"style":1353},[2173],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2175,"children":2176},{"style":1347},[2177],{"type":1237,"value":2178},", b: ",{"type":1232,"tag":1323,"props":2180,"children":2181},{"style":1353},[2182],{"type":1237,"value":1387},{"type":1232,"tag":1323,"props":2184,"children":2185},{"style":1347},[2186],{"type":1237,"value":1392},{"type":1232,"tag":1323,"props":2188,"children":2189},{"style":1353},[2190],{"type":1237,"value":1397},{"type":1232,"tag":1323,"props":2192,"children":2193},{"style":1347},[2194],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2196,"children":2197},{"class":1325,"line":38},[2198,2202,2206,2211,2216,2221],{"type":1232,"tag":1323,"props":2199,"children":2200},{"style":1347},[2201],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2203,"children":2204},{"style":1425},[2205],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2207,"children":2208},{"style":1347},[2209],{"type":1237,"value":2210},"(Object.",{"type":1232,"tag":1323,"props":2212,"children":2213},{"style":1425},[2214],{"type":1237,"value":2215},"entries",{"type":1232,"tag":1323,"props":2217,"children":2218},{"style":1347},[2219],{"type":1237,"value":2220},"(obj)); ",{"type":1232,"tag":1323,"props":2222,"children":2223},{"style":1454},[2224],{"type":1237,"value":2225},"// 输出: [['a', 1], ['b', 2], ['c', 3]]\n",{"type":1232,"tag":1286,"props":2227,"children":2228},{},[2229,2238,2239],{"type":1232,"tag":1290,"props":2230,"children":2231},{},[2232],{"type":1232,"tag":1249,"props":2233,"children":2235},{"className":2234},[],[2236],{"type":1237,"value":2237},"Object.freeze(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2240,"children":2241},{},[2242,2247],{"type":1232,"tag":1286,"props":2243,"children":2244},{},[2245],{"type":1237,"value":2246},"冻结一个对象，冻结后不能向该对象添加新属性，不能删除已有属性，不能修改已有属性的可枚举性、可配置性、可写性以及属性值。",{"type":1232,"tag":1286,"props":2248,"children":2249},{},[2250],{"type":1232,"tag":1313,"props":2251,"children":2253},{"className":1315,"code":2252,"language":1317,"meta":7,"style":7},"const obj = { a: 1 };\nObject.freeze(obj);\nobj.a = 2; // 无效\nconsole.log(obj.a); // 输出: 1\n",[2254],{"type":1232,"tag":1249,"props":2255,"children":2256},{"__ignoreMap":7},[2257,2284,2301,2328],{"type":1232,"tag":1323,"props":2258,"children":2259},{"class":1325,"line":54},[2260,2264,2268,2272,2276,2280],{"type":1232,"tag":1323,"props":2261,"children":2262},{"style":1329},[2263],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2265,"children":2266},{"style":1335},[2267],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2269,"children":2270},{"style":1341},[2271],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2273,"children":2274},{"style":1347},[2275],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":2277,"children":2278},{"style":1353},[2279],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2281,"children":2282},{"style":1347},[2283],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2285,"children":2286},{"class":1325,"line":38},[2287,2291,2296],{"type":1232,"tag":1323,"props":2288,"children":2289},{"style":1347},[2290],{"type":1237,"value":1818},{"type":1232,"tag":1323,"props":2292,"children":2293},{"style":1425},[2294],{"type":1237,"value":2295},"freeze",{"type":1232,"tag":1323,"props":2297,"children":2298},{"style":1347},[2299],{"type":1237,"value":2300},"(obj);\n",{"type":1232,"tag":1323,"props":2302,"children":2303},{"class":1325,"line":333},[2304,2309,2313,2318,2323],{"type":1232,"tag":1323,"props":2305,"children":2306},{"style":1347},[2307],{"type":1237,"value":2308},"obj.a ",{"type":1232,"tag":1323,"props":2310,"children":2311},{"style":1341},[2312],{"type":1237,"value":1704},{"type":1232,"tag":1323,"props":2314,"children":2315},{"style":1353},[2316],{"type":1237,"value":2317}," 2",{"type":1232,"tag":1323,"props":2319,"children":2320},{"style":1347},[2321],{"type":1237,"value":2322},"; ",{"type":1232,"tag":1323,"props":2324,"children":2325},{"style":1454},[2326],{"type":1237,"value":2327},"// 无效\n",{"type":1232,"tag":1323,"props":2329,"children":2330},{"class":1325,"line":98},[2331,2335,2339,2343],{"type":1232,"tag":1323,"props":2332,"children":2333},{"style":1347},[2334],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2336,"children":2337},{"style":1425},[2338],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2340,"children":2341},{"style":1347},[2342],{"type":1237,"value":1896},{"type":1232,"tag":1323,"props":2344,"children":2345},{"style":1454},[2346],{"type":1237,"value":2347},"// 输出: 1\n",{"type":1232,"tag":1286,"props":2349,"children":2350},{},[2351,2360,2361],{"type":1232,"tag":1290,"props":2352,"children":2353},{},[2354],{"type":1232,"tag":1249,"props":2355,"children":2357},{"className":2356},[],[2358],{"type":1237,"value":2359},"Object.getOwnPropertyDescriptor(obj, prop)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2362,"children":2363},{},[2364,2377],{"type":1232,"tag":1286,"props":2365,"children":2366},{},[2367,2369,2375],{"type":1237,"value":2368},"返回对象上一个自有属性对应的属性描述符（如果存在），否则返回 ",{"type":1232,"tag":1249,"props":2370,"children":2372},{"className":2371},[],[2373],{"type":1237,"value":2374},"undefined",{"type":1237,"value":2376},"。",{"type":1232,"tag":1286,"props":2378,"children":2379},{},[2380],{"type":1232,"tag":1313,"props":2381,"children":2383},{"className":1315,"code":2382,"language":1317,"meta":7,"style":7},"const obj = { a: 1 };\nconst descriptor = Object.getOwnPropertyDescriptor(obj, 'a');\nconsole.log(descriptor); // 输出: { value: 1, writable: true, enumerable: true, configurable: true }\n",[2384],{"type":1232,"tag":1249,"props":2385,"children":2386},{"__ignoreMap":7},[2387,2414,2451],{"type":1232,"tag":1323,"props":2388,"children":2389},{"class":1325,"line":54},[2390,2394,2398,2402,2406,2410],{"type":1232,"tag":1323,"props":2391,"children":2392},{"style":1329},[2393],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2395,"children":2396},{"style":1335},[2397],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2399,"children":2400},{"style":1341},[2401],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2403,"children":2404},{"style":1347},[2405],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":2407,"children":2408},{"style":1353},[2409],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2411,"children":2412},{"style":1347},[2413],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2415,"children":2416},{"class":1325,"line":38},[2417,2421,2426,2430,2434,2439,2443,2447],{"type":1232,"tag":1323,"props":2418,"children":2419},{"style":1329},[2420],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2422,"children":2423},{"style":1335},[2424],{"type":1237,"value":2425}," descriptor",{"type":1232,"tag":1323,"props":2427,"children":2428},{"style":1341},[2429],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2431,"children":2432},{"style":1347},[2433],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":2435,"children":2436},{"style":1425},[2437],{"type":1237,"value":2438},"getOwnPropertyDescriptor",{"type":1232,"tag":1323,"props":2440,"children":2441},{"style":1347},[2442],{"type":1237,"value":1828},{"type":1232,"tag":1323,"props":2444,"children":2445},{"style":1570},[2446],{"type":1237,"value":1833},{"type":1232,"tag":1323,"props":2448,"children":2449},{"style":1347},[2450],{"type":1237,"value":1637},{"type":1232,"tag":1323,"props":2452,"children":2453},{"class":1325,"line":333},[2454,2458,2462,2467],{"type":1232,"tag":1323,"props":2455,"children":2456},{"style":1347},[2457],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2459,"children":2460},{"style":1425},[2461],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2463,"children":2464},{"style":1347},[2465],{"type":1237,"value":2466},"(descriptor); ",{"type":1232,"tag":1323,"props":2468,"children":2469},{"style":1454},[2470],{"type":1237,"value":2471},"// 输出: { value: 1, writable: true, enumerable: true, configurable: true }\n",{"type":1232,"tag":1286,"props":2473,"children":2474},{},[2475,2484,2485],{"type":1232,"tag":1290,"props":2476,"children":2477},{},[2478],{"type":1232,"tag":1249,"props":2479,"children":2481},{"className":2480},[],[2482],{"type":1237,"value":2483},"Object.getOwnPropertyDescriptors(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2486,"children":2487},{},[2488,2493],{"type":1232,"tag":1286,"props":2489,"children":2490},{},[2491],{"type":1237,"value":2492},"返回一个对象的所有自身属性的描述符。",{"type":1232,"tag":1286,"props":2494,"children":2495},{},[2496],{"type":1232,"tag":1313,"props":2497,"children":2499},{"className":1315,"code":2498,"language":1317,"meta":7,"style":7},"const obj = { a: 1 };\nconst descriptors = Object.getOwnPropertyDescriptors(obj);\nconsole.log(descriptors); // 输出: { a: { value: 1, writable: true, enumerable: true, configurable: true } }\n",[2500],{"type":1232,"tag":1249,"props":2501,"children":2502},{"__ignoreMap":7},[2503,2530,2559],{"type":1232,"tag":1323,"props":2504,"children":2505},{"class":1325,"line":54},[2506,2510,2514,2518,2522,2526],{"type":1232,"tag":1323,"props":2507,"children":2508},{"style":1329},[2509],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2511,"children":2512},{"style":1335},[2513],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2515,"children":2516},{"style":1341},[2517],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2519,"children":2520},{"style":1347},[2521],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":2523,"children":2524},{"style":1353},[2525],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2527,"children":2528},{"style":1347},[2529],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2531,"children":2532},{"class":1325,"line":38},[2533,2537,2542,2546,2550,2555],{"type":1232,"tag":1323,"props":2534,"children":2535},{"style":1329},[2536],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2538,"children":2539},{"style":1335},[2540],{"type":1237,"value":2541}," descriptors",{"type":1232,"tag":1323,"props":2543,"children":2544},{"style":1341},[2545],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2547,"children":2548},{"style":1347},[2549],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":2551,"children":2552},{"style":1425},[2553],{"type":1237,"value":2554},"getOwnPropertyDescriptors",{"type":1232,"tag":1323,"props":2556,"children":2557},{"style":1347},[2558],{"type":1237,"value":2300},{"type":1232,"tag":1323,"props":2560,"children":2561},{"class":1325,"line":333},[2562,2566,2570,2575],{"type":1232,"tag":1323,"props":2563,"children":2564},{"style":1347},[2565],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2567,"children":2568},{"style":1425},[2569],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2571,"children":2572},{"style":1347},[2573],{"type":1237,"value":2574},"(descriptors); ",{"type":1232,"tag":1323,"props":2576,"children":2577},{"style":1454},[2578],{"type":1237,"value":2579},"// 输出: { a: { value: 1, writable: true, enumerable: true, configurable: true } }\n",{"type":1232,"tag":1286,"props":2581,"children":2582},{},[2583,2592,2593],{"type":1232,"tag":1290,"props":2584,"children":2585},{},[2586],{"type":1232,"tag":1249,"props":2587,"children":2589},{"className":2588},[],[2590],{"type":1237,"value":2591},"Object.getOwnPropertyNames(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2594,"children":2595},{},[2596,2609],{"type":1232,"tag":1286,"props":2597,"children":2598},{},[2599,2601,2607],{"type":1237,"value":2600},"返回一个包含对象自身所有属性（包括不可枚举属性但不包括 ",{"type":1232,"tag":1249,"props":2602,"children":2604},{"className":2603},[],[2605],{"type":1237,"value":2606},"Symbol",{"type":1237,"value":2608}," 属性）的数组。",{"type":1232,"tag":1286,"props":2610,"children":2611},{},[2612],{"type":1232,"tag":1313,"props":2613,"children":2615},{"className":1315,"code":2614,"language":1317,"meta":7,"style":7},"const obj = { a: 1, b: 2 };\nconsole.log(Object.getOwnPropertyNames(obj)); // 输出: ['a', 'b']\n",[2616],{"type":1232,"tag":1249,"props":2617,"children":2618},{"__ignoreMap":7},[2619,2654],{"type":1232,"tag":1323,"props":2620,"children":2621},{"class":1325,"line":54},[2622,2626,2630,2634,2638,2642,2646,2650],{"type":1232,"tag":1323,"props":2623,"children":2624},{"style":1329},[2625],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2627,"children":2628},{"style":1335},[2629],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2631,"children":2632},{"style":1341},[2633],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2635,"children":2636},{"style":1347},[2637],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":2639,"children":2640},{"style":1353},[2641],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2643,"children":2644},{"style":1347},[2645],{"type":1237,"value":2178},{"type":1232,"tag":1323,"props":2647,"children":2648},{"style":1353},[2649],{"type":1237,"value":1387},{"type":1232,"tag":1323,"props":2651,"children":2652},{"style":1347},[2653],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2655,"children":2656},{"class":1325,"line":38},[2657,2661,2665,2669,2674,2678],{"type":1232,"tag":1323,"props":2658,"children":2659},{"style":1347},[2660],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2662,"children":2663},{"style":1425},[2664],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2666,"children":2667},{"style":1347},[2668],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":2670,"children":2671},{"style":1425},[2672],{"type":1237,"value":2673},"getOwnPropertyNames",{"type":1232,"tag":1323,"props":2675,"children":2676},{"style":1347},[2677],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":2679,"children":2680},{"style":1454},[2681],{"type":1237,"value":2682},"// 输出: ['a', 'b']\n",{"type":1232,"tag":1286,"props":2684,"children":2685},{},[2686,2695,2696],{"type":1232,"tag":1290,"props":2687,"children":2688},{},[2689],{"type":1232,"tag":1249,"props":2690,"children":2692},{"className":2691},[],[2693],{"type":1237,"value":2694},"Object.getOwnPropertySymbols(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2697,"children":2698},{},[2699,2711],{"type":1232,"tag":1286,"props":2700,"children":2701},{},[2702,2704,2709],{"type":1237,"value":2703},"返回一个数组，包含对象自身所有的 ",{"type":1232,"tag":1249,"props":2705,"children":2707},{"className":2706},[],[2708],{"type":1237,"value":2606},{"type":1237,"value":2710}," 属性键。",{"type":1232,"tag":1286,"props":2712,"children":2713},{},[2714],{"type":1232,"tag":1313,"props":2715,"children":2717},{"className":1315,"code":2716,"language":1317,"meta":7,"style":7},"const sym = Symbol('foo');\nconst obj = { [sym]: 1 };\nconsole.log(Object.getOwnPropertySymbols(obj)); // 输出: [Symbol(foo)]\n",[2718],{"type":1232,"tag":1249,"props":2719,"children":2720},{"__ignoreMap":7},[2721,2755,2783],{"type":1232,"tag":1323,"props":2722,"children":2723},{"class":1325,"line":54},[2724,2728,2733,2737,2742,2746,2751],{"type":1232,"tag":1323,"props":2725,"children":2726},{"style":1329},[2727],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2729,"children":2730},{"style":1335},[2731],{"type":1237,"value":2732}," sym",{"type":1232,"tag":1323,"props":2734,"children":2735},{"style":1341},[2736],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2738,"children":2739},{"style":1425},[2740],{"type":1237,"value":2741}," Symbol",{"type":1232,"tag":1323,"props":2743,"children":2744},{"style":1347},[2745],{"type":1237,"value":1567},{"type":1232,"tag":1323,"props":2747,"children":2748},{"style":1570},[2749],{"type":1237,"value":2750},"'foo'",{"type":1232,"tag":1323,"props":2752,"children":2753},{"style":1347},[2754],{"type":1237,"value":1637},{"type":1232,"tag":1323,"props":2756,"children":2757},{"class":1325,"line":38},[2758,2762,2766,2770,2775,2779],{"type":1232,"tag":1323,"props":2759,"children":2760},{"style":1329},[2761],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2763,"children":2764},{"style":1335},[2765],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2767,"children":2768},{"style":1341},[2769],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2771,"children":2772},{"style":1347},[2773],{"type":1237,"value":2774}," { [sym]: ",{"type":1232,"tag":1323,"props":2776,"children":2777},{"style":1353},[2778],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":2780,"children":2781},{"style":1347},[2782],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":2784,"children":2785},{"class":1325,"line":333},[2786,2790,2794,2798,2803,2807],{"type":1232,"tag":1323,"props":2787,"children":2788},{"style":1347},[2789],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2791,"children":2792},{"style":1425},[2793],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2795,"children":2796},{"style":1347},[2797],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":2799,"children":2800},{"style":1425},[2801],{"type":1237,"value":2802},"getOwnPropertySymbols",{"type":1232,"tag":1323,"props":2804,"children":2805},{"style":1347},[2806],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":2808,"children":2809},{"style":1454},[2810],{"type":1237,"value":2811},"// 输出: [Symbol(foo)]\n",{"type":1232,"tag":1286,"props":2813,"children":2814},{},[2815,2824,2825],{"type":1232,"tag":1290,"props":2816,"children":2817},{},[2818],{"type":1232,"tag":1249,"props":2819,"children":2821},{"className":2820},[],[2822],{"type":1237,"value":2823},"Object.getPrototypeOf(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2826,"children":2827},{},[2828,2833],{"type":1232,"tag":1286,"props":2829,"children":2830},{},[2831],{"type":1237,"value":2832},"返回指定对象的原型（即，内部 [[Prototype]] 属性的值）。",{"type":1232,"tag":1286,"props":2834,"children":2835},{},[2836],{"type":1232,"tag":1313,"props":2837,"children":2839},{"className":1315,"code":2838,"language":1317,"meta":7,"style":7},"const obj = {};\nconst proto = Object.getPrototypeOf(obj);\nconsole.log(proto); // 输出: {}\n",[2840],{"type":1232,"tag":1249,"props":2841,"children":2842},{"__ignoreMap":7},[2843,2862,2891],{"type":1232,"tag":1323,"props":2844,"children":2845},{"class":1325,"line":54},[2846,2850,2854,2858],{"type":1232,"tag":1323,"props":2847,"children":2848},{"style":1329},[2849],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2851,"children":2852},{"style":1335},[2853],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":2855,"children":2856},{"style":1341},[2857],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2859,"children":2860},{"style":1347},[2861],{"type":1237,"value":1810},{"type":1232,"tag":1323,"props":2863,"children":2864},{"class":1325,"line":38},[2865,2869,2874,2878,2882,2887],{"type":1232,"tag":1323,"props":2866,"children":2867},{"style":1329},[2868],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":2870,"children":2871},{"style":1335},[2872],{"type":1237,"value":2873}," proto",{"type":1232,"tag":1323,"props":2875,"children":2876},{"style":1341},[2877],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":2879,"children":2880},{"style":1347},[2881],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":2883,"children":2884},{"style":1425},[2885],{"type":1237,"value":2886},"getPrototypeOf",{"type":1232,"tag":1323,"props":2888,"children":2889},{"style":1347},[2890],{"type":1237,"value":2300},{"type":1232,"tag":1323,"props":2892,"children":2893},{"class":1325,"line":333},[2894,2898,2902,2907],{"type":1232,"tag":1323,"props":2895,"children":2896},{"style":1347},[2897],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2899,"children":2900},{"style":1425},[2901],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2903,"children":2904},{"style":1347},[2905],{"type":1237,"value":2906},"(proto); ",{"type":1232,"tag":1323,"props":2908,"children":2909},{"style":1454},[2910],{"type":1237,"value":2911},"// 输出: {}\n",{"type":1232,"tag":1286,"props":2913,"children":2914},{},[2915,2924,2925],{"type":1232,"tag":1290,"props":2916,"children":2917},{},[2918],{"type":1232,"tag":1249,"props":2919,"children":2921},{"className":2920},[],[2922],{"type":1237,"value":2923},"Object.is(value1, value2)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":2926,"children":2927},{},[2928,2956],{"type":1232,"tag":1286,"props":2929,"children":2930},{},[2931,2933,2939,2941,2947,2949,2954],{"type":1237,"value":2932},"判断两个值是否是相同的值。所有 ",{"type":1232,"tag":1249,"props":2934,"children":2936},{"className":2935},[],[2937],{"type":1237,"value":2938},"NaN",{"type":1237,"value":2940}," 值都相同（即 ",{"type":1232,"tag":1249,"props":2942,"children":2944},{"className":2943},[],[2945],{"type":1237,"value":2946},"Object.is(NaN, NaN)",{"type":1237,"value":2948}," 返回 ",{"type":1232,"tag":1249,"props":2950,"children":2952},{"className":2951},[],[2953],{"type":1237,"value":1868},{"type":1237,"value":2955},"），但正零和负零不相同。",{"type":1232,"tag":1286,"props":2957,"children":2958},{},[2959],{"type":1232,"tag":1313,"props":2960,"children":2962},{"className":1315,"code":2961,"language":1317,"meta":7,"style":7},"console.log(Object.is('foo', 'foo')); // 输出: true\nconsole.log(Object.is(NaN, NaN)); // 输出: true\nconsole.log(Object.is(0, -0)); // 输出: false\n",[2963],{"type":1232,"tag":1249,"props":2964,"children":2965},{"__ignoreMap":7},[2966,3012,3055],{"type":1232,"tag":1323,"props":2967,"children":2968},{"class":1325,"line":54},[2969,2973,2977,2981,2986,2990,2994,2999,3003,3008],{"type":1232,"tag":1323,"props":2970,"children":2971},{"style":1347},[2972],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":2974,"children":2975},{"style":1425},[2976],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":2978,"children":2979},{"style":1347},[2980],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":2982,"children":2983},{"style":1425},[2984],{"type":1237,"value":2985},"is",{"type":1232,"tag":1323,"props":2987,"children":2988},{"style":1347},[2989],{"type":1237,"value":1567},{"type":1232,"tag":1323,"props":2991,"children":2992},{"style":1570},[2993],{"type":1237,"value":2750},{"type":1232,"tag":1323,"props":2995,"children":2996},{"style":1347},[2997],{"type":1237,"value":2998},", ",{"type":1232,"tag":1323,"props":3000,"children":3001},{"style":1570},[3002],{"type":1237,"value":2750},{"type":1232,"tag":1323,"props":3004,"children":3005},{"style":1347},[3006],{"type":1237,"value":3007},")); ",{"type":1232,"tag":1323,"props":3009,"children":3010},{"style":1454},[3011],{"type":1237,"value":2089},{"type":1232,"tag":1323,"props":3013,"children":3014},{"class":1325,"line":38},[3015,3019,3023,3027,3031,3035,3039,3043,3047,3051],{"type":1232,"tag":1323,"props":3016,"children":3017},{"style":1347},[3018],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3020,"children":3021},{"style":1425},[3022],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3024,"children":3025},{"style":1347},[3026],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3028,"children":3029},{"style":1425},[3030],{"type":1237,"value":2985},{"type":1232,"tag":1323,"props":3032,"children":3033},{"style":1347},[3034],{"type":1237,"value":1567},{"type":1232,"tag":1323,"props":3036,"children":3037},{"style":1353},[3038],{"type":1237,"value":2938},{"type":1232,"tag":1323,"props":3040,"children":3041},{"style":1347},[3042],{"type":1237,"value":2998},{"type":1232,"tag":1323,"props":3044,"children":3045},{"style":1353},[3046],{"type":1237,"value":2938},{"type":1232,"tag":1323,"props":3048,"children":3049},{"style":1347},[3050],{"type":1237,"value":3007},{"type":1232,"tag":1323,"props":3052,"children":3053},{"style":1454},[3054],{"type":1237,"value":2089},{"type":1232,"tag":1323,"props":3056,"children":3057},{"class":1325,"line":333},[3058,3062,3066,3070,3074,3078,3083,3087,3092,3096,3100],{"type":1232,"tag":1323,"props":3059,"children":3060},{"style":1347},[3061],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3063,"children":3064},{"style":1425},[3065],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3067,"children":3068},{"style":1347},[3069],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3071,"children":3072},{"style":1425},[3073],{"type":1237,"value":2985},{"type":1232,"tag":1323,"props":3075,"children":3076},{"style":1347},[3077],{"type":1237,"value":1567},{"type":1232,"tag":1323,"props":3079,"children":3080},{"style":1353},[3081],{"type":1237,"value":3082},"0",{"type":1232,"tag":1323,"props":3084,"children":3085},{"style":1347},[3086],{"type":1237,"value":2998},{"type":1232,"tag":1323,"props":3088,"children":3089},{"style":1341},[3090],{"type":1237,"value":3091},"-",{"type":1232,"tag":1323,"props":3093,"children":3094},{"style":1353},[3095],{"type":1237,"value":3082},{"type":1232,"tag":1323,"props":3097,"children":3098},{"style":1347},[3099],{"type":1237,"value":3007},{"type":1232,"tag":1323,"props":3101,"children":3102},{"style":1454},[3103],{"type":1237,"value":3104},"// 输出: false\n",{"type":1232,"tag":1286,"props":3106,"children":3107},{},[3108,3117,3118],{"type":1232,"tag":1290,"props":3109,"children":3110},{},[3111],{"type":1232,"tag":1249,"props":3112,"children":3114},{"className":3113},[],[3115],{"type":1237,"value":3116},"Object.isExtensible(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3119,"children":3120},{},[3121,3126],{"type":1232,"tag":1286,"props":3122,"children":3123},{},[3124],{"type":1237,"value":3125},"判断对象是否是可扩展的（即，可以添加新的属性）。",{"type":1232,"tag":1286,"props":3127,"children":3128},{},[3129],{"type":1232,"tag":1313,"props":3130,"children":3132},{"className":1315,"code":3131,"language":1317,"meta":7,"style":7},"const obj = {};\nconsole.log(Object.isExtensible(obj)); // 输出: true\nObject.preventExtensions(obj);\nconsole.log(Object.isExtensible(obj)); // 输出: false\n",[3133],{"type":1232,"tag":1249,"props":3134,"children":3135},{"__ignoreMap":7},[3136,3155,3183,3199],{"type":1232,"tag":1323,"props":3137,"children":3138},{"class":1325,"line":54},[3139,3143,3147,3151],{"type":1232,"tag":1323,"props":3140,"children":3141},{"style":1329},[3142],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3144,"children":3145},{"style":1335},[3146],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3148,"children":3149},{"style":1341},[3150],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3152,"children":3153},{"style":1347},[3154],{"type":1237,"value":1810},{"type":1232,"tag":1323,"props":3156,"children":3157},{"class":1325,"line":38},[3158,3162,3166,3170,3175,3179],{"type":1232,"tag":1323,"props":3159,"children":3160},{"style":1347},[3161],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3163,"children":3164},{"style":1425},[3165],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3167,"children":3168},{"style":1347},[3169],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3171,"children":3172},{"style":1425},[3173],{"type":1237,"value":3174},"isExtensible",{"type":1232,"tag":1323,"props":3176,"children":3177},{"style":1347},[3178],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3180,"children":3181},{"style":1454},[3182],{"type":1237,"value":2089},{"type":1232,"tag":1323,"props":3184,"children":3185},{"class":1325,"line":333},[3186,3190,3195],{"type":1232,"tag":1323,"props":3187,"children":3188},{"style":1347},[3189],{"type":1237,"value":1818},{"type":1232,"tag":1323,"props":3191,"children":3192},{"style":1425},[3193],{"type":1237,"value":3194},"preventExtensions",{"type":1232,"tag":1323,"props":3196,"children":3197},{"style":1347},[3198],{"type":1237,"value":2300},{"type":1232,"tag":1323,"props":3200,"children":3201},{"class":1325,"line":98},[3202,3206,3210,3214,3218,3222],{"type":1232,"tag":1323,"props":3203,"children":3204},{"style":1347},[3205],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3207,"children":3208},{"style":1425},[3209],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3211,"children":3212},{"style":1347},[3213],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3215,"children":3216},{"style":1425},[3217],{"type":1237,"value":3174},{"type":1232,"tag":1323,"props":3219,"children":3220},{"style":1347},[3221],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3223,"children":3224},{"style":1454},[3225],{"type":1237,"value":3104},{"type":1232,"tag":1286,"props":3227,"children":3228},{},[3229,3238,3239],{"type":1232,"tag":1290,"props":3230,"children":3231},{},[3232],{"type":1232,"tag":1249,"props":3233,"children":3235},{"className":3234},[],[3236],{"type":1237,"value":3237},"Object.isFrozen(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3240,"children":3241},{},[3242,3247],{"type":1232,"tag":1286,"props":3243,"children":3244},{},[3245],{"type":1237,"value":3246},"判断对象是否被冻结。",{"type":1232,"tag":1286,"props":3248,"children":3249},{},[3250],{"type":1232,"tag":1313,"props":3251,"children":3253},{"className":1315,"code":3252,"language":1317,"meta":7,"style":7},"const obj = Object.freeze({});\nconsole.log(Object.isFrozen(obj)); // 输出: true\n",[3254],{"type":1232,"tag":1249,"props":3255,"children":3256},{"__ignoreMap":7},[3257,3285],{"type":1232,"tag":1323,"props":3258,"children":3259},{"class":1325,"line":54},[3260,3264,3268,3272,3276,3280],{"type":1232,"tag":1323,"props":3261,"children":3262},{"style":1329},[3263],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3265,"children":3266},{"style":1335},[3267],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3269,"children":3270},{"style":1341},[3271],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3273,"children":3274},{"style":1347},[3275],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":3277,"children":3278},{"style":1425},[3279],{"type":1237,"value":2295},{"type":1232,"tag":1323,"props":3281,"children":3282},{"style":1347},[3283],{"type":1237,"value":3284},"({});\n",{"type":1232,"tag":1323,"props":3286,"children":3287},{"class":1325,"line":38},[3288,3292,3296,3300,3305,3309],{"type":1232,"tag":1323,"props":3289,"children":3290},{"style":1347},[3291],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3293,"children":3294},{"style":1425},[3295],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3297,"children":3298},{"style":1347},[3299],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3301,"children":3302},{"style":1425},[3303],{"type":1237,"value":3304},"isFrozen",{"type":1232,"tag":1323,"props":3306,"children":3307},{"style":1347},[3308],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3310,"children":3311},{"style":1454},[3312],{"type":1237,"value":2089},{"type":1232,"tag":1286,"props":3314,"children":3315},{},[3316,3325,3326],{"type":1232,"tag":1290,"props":3317,"children":3318},{},[3319],{"type":1232,"tag":1249,"props":3320,"children":3322},{"className":3321},[],[3323],{"type":1237,"value":3324},"Object.isSealed(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3327,"children":3328},{},[3329,3334],{"type":1232,"tag":1286,"props":3330,"children":3331},{},[3332],{"type":1237,"value":3333},"判断对象是否被密封。",{"type":1232,"tag":1286,"props":3335,"children":3336},{},[3337],{"type":1232,"tag":1313,"props":3338,"children":3340},{"className":1315,"code":3339,"language":1317,"meta":7,"style":7},"const obj = Object.seal({});\nconsole.log(Object.isSealed(obj)); // 输出: true\n",[3341],{"type":1232,"tag":1249,"props":3342,"children":3343},{"__ignoreMap":7},[3344,3372],{"type":1232,"tag":1323,"props":3345,"children":3346},{"class":1325,"line":54},[3347,3351,3355,3359,3363,3368],{"type":1232,"tag":1323,"props":3348,"children":3349},{"style":1329},[3350],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3352,"children":3353},{"style":1335},[3354],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3356,"children":3357},{"style":1341},[3358],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3360,"children":3361},{"style":1347},[3362],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":3364,"children":3365},{"style":1425},[3366],{"type":1237,"value":3367},"seal",{"type":1232,"tag":1323,"props":3369,"children":3370},{"style":1347},[3371],{"type":1237,"value":3284},{"type":1232,"tag":1323,"props":3373,"children":3374},{"class":1325,"line":38},[3375,3379,3383,3387,3392,3396],{"type":1232,"tag":1323,"props":3376,"children":3377},{"style":1347},[3378],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3380,"children":3381},{"style":1425},[3382],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3384,"children":3385},{"style":1347},[3386],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3388,"children":3389},{"style":1425},[3390],{"type":1237,"value":3391},"isSealed",{"type":1232,"tag":1323,"props":3393,"children":3394},{"style":1347},[3395],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3397,"children":3398},{"style":1454},[3399],{"type":1237,"value":2089},{"type":1232,"tag":1286,"props":3401,"children":3402},{},[3403,3412,3413],{"type":1232,"tag":1290,"props":3404,"children":3405},{},[3406],{"type":1232,"tag":1249,"props":3407,"children":3409},{"className":3408},[],[3410],{"type":1237,"value":3411},"Object.keys(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3414,"children":3415},{},[3416,3421],{"type":1232,"tag":1286,"props":3417,"children":3418},{},[3419],{"type":1237,"value":3420},"返回一个包含对象自身所有可枚举属性名称的数组。",{"type":1232,"tag":1286,"props":3422,"children":3423},{},[3424],{"type":1232,"tag":1313,"props":3425,"children":3427},{"className":1315,"code":3426,"language":1317,"meta":7,"style":7},"const obj = { a: 1, b: 2, c: 3 };\nconsole.log(Object.keys(obj)); // 输出: ['a', 'b', 'c']\n",[3428],{"type":1232,"tag":1249,"props":3429,"children":3430},{"__ignoreMap":7},[3431,3474],{"type":1232,"tag":1323,"props":3432,"children":3433},{"class":1325,"line":54},[3434,3438,3442,3446,3450,3454,3458,3462,3466,3470],{"type":1232,"tag":1323,"props":3435,"children":3436},{"style":1329},[3437],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3439,"children":3440},{"style":1335},[3441],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3443,"children":3444},{"style":1341},[3445],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3447,"children":3448},{"style":1347},[3449],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":3451,"children":3452},{"style":1353},[3453],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":3455,"children":3456},{"style":1347},[3457],{"type":1237,"value":2178},{"type":1232,"tag":1323,"props":3459,"children":3460},{"style":1353},[3461],{"type":1237,"value":1387},{"type":1232,"tag":1323,"props":3463,"children":3464},{"style":1347},[3465],{"type":1237,"value":1392},{"type":1232,"tag":1323,"props":3467,"children":3468},{"style":1353},[3469],{"type":1237,"value":1397},{"type":1232,"tag":1323,"props":3471,"children":3472},{"style":1347},[3473],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":3475,"children":3476},{"class":1325,"line":38},[3477,3481,3485,3489,3494,3498],{"type":1232,"tag":1323,"props":3478,"children":3479},{"style":1347},[3480],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3482,"children":3483},{"style":1425},[3484],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3486,"children":3487},{"style":1347},[3488],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3490,"children":3491},{"style":1425},[3492],{"type":1237,"value":3493},"keys",{"type":1232,"tag":1323,"props":3495,"children":3496},{"style":1347},[3497],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3499,"children":3500},{"style":1454},[3501],{"type":1237,"value":3502},"// 输出: ['a', 'b', 'c']\n",{"type":1232,"tag":1286,"props":3504,"children":3505},{},[3506,3515,3516],{"type":1232,"tag":1290,"props":3507,"children":3508},{},[3509],{"type":1232,"tag":1249,"props":3510,"children":3512},{"className":3511},[],[3513],{"type":1237,"value":3514},"Object.preventExtensions(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3517,"children":3518},{},[3519,3524],{"type":1232,"tag":1286,"props":3520,"children":3521},{},[3522],{"type":1237,"value":3523},"防止对象的扩展。将对象设置为不可扩展（即，不能添加新的属性）。",{"type":1232,"tag":1286,"props":3525,"children":3526},{},[3527],{"type":1232,"tag":1313,"props":3528,"children":3530},{"className":1315,"code":3529,"language":1317,"meta":7,"style":7},"const obj = {};\nObject.preventExtensions(obj);\nobj.a = 1; // 无效\nconsole.log(obj.a); // 输出: undefined\n",[3531],{"type":1232,"tag":1249,"props":3532,"children":3533},{"__ignoreMap":7},[3534,3553,3568,3592],{"type":1232,"tag":1323,"props":3535,"children":3536},{"class":1325,"line":54},[3537,3541,3545,3549],{"type":1232,"tag":1323,"props":3538,"children":3539},{"style":1329},[3540],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3542,"children":3543},{"style":1335},[3544],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3546,"children":3547},{"style":1341},[3548],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3550,"children":3551},{"style":1347},[3552],{"type":1237,"value":1810},{"type":1232,"tag":1323,"props":3554,"children":3555},{"class":1325,"line":38},[3556,3560,3564],{"type":1232,"tag":1323,"props":3557,"children":3558},{"style":1347},[3559],{"type":1237,"value":1818},{"type":1232,"tag":1323,"props":3561,"children":3562},{"style":1425},[3563],{"type":1237,"value":3194},{"type":1232,"tag":1323,"props":3565,"children":3566},{"style":1347},[3567],{"type":1237,"value":2300},{"type":1232,"tag":1323,"props":3569,"children":3570},{"class":1325,"line":333},[3571,3575,3579,3584,3588],{"type":1232,"tag":1323,"props":3572,"children":3573},{"style":1347},[3574],{"type":1237,"value":2308},{"type":1232,"tag":1323,"props":3576,"children":3577},{"style":1341},[3578],{"type":1237,"value":1704},{"type":1232,"tag":1323,"props":3580,"children":3581},{"style":1353},[3582],{"type":1237,"value":3583}," 1",{"type":1232,"tag":1323,"props":3585,"children":3586},{"style":1347},[3587],{"type":1237,"value":2322},{"type":1232,"tag":1323,"props":3589,"children":3590},{"style":1454},[3591],{"type":1237,"value":2327},{"type":1232,"tag":1323,"props":3593,"children":3594},{"class":1325,"line":98},[3595,3599,3603,3607],{"type":1232,"tag":1323,"props":3596,"children":3597},{"style":1347},[3598],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3600,"children":3601},{"style":1425},[3602],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3604,"children":3605},{"style":1347},[3606],{"type":1237,"value":1896},{"type":1232,"tag":1323,"props":3608,"children":3609},{"style":1454},[3610],{"type":1237,"value":3611},"// 输出: undefined\n",{"type":1232,"tag":1286,"props":3613,"children":3614},{},[3615,3624,3625],{"type":1232,"tag":1290,"props":3616,"children":3617},{},[3618],{"type":1232,"tag":1249,"props":3619,"children":3621},{"className":3620},[],[3622],{"type":1237,"value":3623},"Object.seal(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3626,"children":3627},{},[3628,3633],{"type":1232,"tag":1286,"props":3629,"children":3630},{},[3631],{"type":1237,"value":3632},"密封一个对象，防止添加新属性并将所有现有属性标记为不可配置。现有属性的值仍然可以改变。",{"type":1232,"tag":1286,"props":3634,"children":3635},{},[3636],{"type":1232,"tag":1313,"props":3637,"children":3639},{"className":1315,"code":3638,"language":1317,"meta":7,"style":7},"const obj = { a: 1 };\nObject.seal(obj);\ndelete obj.a; // 无效\nconsole.log(obj.a); // 输出: 1\n",[3640],{"type":1232,"tag":1249,"props":3641,"children":3642},{"__ignoreMap":7},[3643,3670,3685,3702],{"type":1232,"tag":1323,"props":3644,"children":3645},{"class":1325,"line":54},[3646,3650,3654,3658,3662,3666],{"type":1232,"tag":1323,"props":3647,"children":3648},{"style":1329},[3649],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3651,"children":3652},{"style":1335},[3653],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3655,"children":3656},{"style":1341},[3657],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3659,"children":3660},{"style":1347},[3661],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":3663,"children":3664},{"style":1353},[3665],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":3667,"children":3668},{"style":1347},[3669],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":3671,"children":3672},{"class":1325,"line":38},[3673,3677,3681],{"type":1232,"tag":1323,"props":3674,"children":3675},{"style":1347},[3676],{"type":1237,"value":1818},{"type":1232,"tag":1323,"props":3678,"children":3679},{"style":1425},[3680],{"type":1237,"value":3367},{"type":1232,"tag":1323,"props":3682,"children":3683},{"style":1347},[3684],{"type":1237,"value":2300},{"type":1232,"tag":1323,"props":3686,"children":3687},{"class":1325,"line":333},[3688,3693,3698],{"type":1232,"tag":1323,"props":3689,"children":3690},{"style":1341},[3691],{"type":1237,"value":3692},"delete",{"type":1232,"tag":1323,"props":3694,"children":3695},{"style":1347},[3696],{"type":1237,"value":3697}," obj.a; ",{"type":1232,"tag":1323,"props":3699,"children":3700},{"style":1454},[3701],{"type":1237,"value":2327},{"type":1232,"tag":1323,"props":3703,"children":3704},{"class":1325,"line":98},[3705,3709,3713,3717],{"type":1232,"tag":1323,"props":3706,"children":3707},{"style":1347},[3708],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3710,"children":3711},{"style":1425},[3712],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3714,"children":3715},{"style":1347},[3716],{"type":1237,"value":1896},{"type":1232,"tag":1323,"props":3718,"children":3719},{"style":1454},[3720],{"type":1237,"value":2347},{"type":1232,"tag":1286,"props":3722,"children":3723},{},[3724,3733,3734],{"type":1232,"tag":1290,"props":3725,"children":3726},{},[3727],{"type":1232,"tag":1249,"props":3728,"children":3730},{"className":3729},[],[3731],{"type":1237,"value":3732},"Object.setPrototypeOf(obj, prototype)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3735,"children":3736},{},[3737,3742],{"type":1232,"tag":1286,"props":3738,"children":3739},{},[3740],{"type":1237,"value":3741},"设置对象的原型（即，内部 [[Prototype]] 属性的值），返回指定对象。",{"type":1232,"tag":1286,"props":3743,"children":3744},{},[3745],{"type":1232,"tag":1313,"props":3746,"children":3748},{"className":1315,"code":3747,"language":1317,"meta":7,"style":7},"const proto = {};\nconst obj = Object.setPrototypeOf({}, proto);\nconsole.log(Object.getPrototypeOf(obj) === proto); // 输出: true\n",[3749],{"type":1232,"tag":1249,"props":3750,"children":3751},{"__ignoreMap":7},[3752,3771,3800],{"type":1232,"tag":1323,"props":3753,"children":3754},{"class":1325,"line":54},[3755,3759,3763,3767],{"type":1232,"tag":1323,"props":3756,"children":3757},{"style":1329},[3758],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3760,"children":3761},{"style":1335},[3762],{"type":1237,"value":2873},{"type":1232,"tag":1323,"props":3764,"children":3765},{"style":1341},[3766],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3768,"children":3769},{"style":1347},[3770],{"type":1237,"value":1810},{"type":1232,"tag":1323,"props":3772,"children":3773},{"class":1325,"line":38},[3774,3778,3782,3786,3790,3795],{"type":1232,"tag":1323,"props":3775,"children":3776},{"style":1329},[3777],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3779,"children":3780},{"style":1335},[3781],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3783,"children":3784},{"style":1341},[3785],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3787,"children":3788},{"style":1347},[3789],{"type":1237,"value":1422},{"type":1232,"tag":1323,"props":3791,"children":3792},{"style":1425},[3793],{"type":1237,"value":3794},"setPrototypeOf",{"type":1232,"tag":1323,"props":3796,"children":3797},{"style":1347},[3798],{"type":1237,"value":3799},"({}, proto);\n",{"type":1232,"tag":1323,"props":3801,"children":3802},{"class":1325,"line":333},[3803,3807,3811,3815,3819,3824,3829,3834],{"type":1232,"tag":1323,"props":3804,"children":3805},{"style":1347},[3806],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3808,"children":3809},{"style":1425},[3810],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3812,"children":3813},{"style":1347},[3814],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3816,"children":3817},{"style":1425},[3818],{"type":1237,"value":2886},{"type":1232,"tag":1323,"props":3820,"children":3821},{"style":1347},[3822],{"type":1237,"value":3823},"(obj) ",{"type":1232,"tag":1323,"props":3825,"children":3826},{"style":1341},[3827],{"type":1237,"value":3828},"===",{"type":1232,"tag":1323,"props":3830,"children":3831},{"style":1347},[3832],{"type":1237,"value":3833}," proto); ",{"type":1232,"tag":1323,"props":3835,"children":3836},{"style":1454},[3837],{"type":1237,"value":2089},{"type":1232,"tag":1286,"props":3839,"children":3840},{},[3841,3850,3851],{"type":1232,"tag":1290,"props":3842,"children":3843},{},[3844],{"type":1232,"tag":1249,"props":3845,"children":3847},{"className":3846},[],[3848],{"type":1237,"value":3849},"Object.values(obj)",{"type":1237,"value":1300},{"type":1232,"tag":1302,"props":3852,"children":3853},{},[3854,3859],{"type":1232,"tag":1286,"props":3855,"children":3856},{},[3857],{"type":1237,"value":3858},"返回一个包含对象自身所有可枚举属性值的数组。",{"type":1232,"tag":1286,"props":3860,"children":3861},{},[3862],{"type":1232,"tag":1313,"props":3863,"children":3865},{"className":1315,"code":3864,"language":1317,"meta":7,"style":7},"const obj = { a: 1, b: 2, c: 3 };\nconsole.log(Object.values(obj)); // 输出: [1, 2, 3]\n",[3866],{"type":1232,"tag":1249,"props":3867,"children":3868},{"__ignoreMap":7},[3869,3912],{"type":1232,"tag":1323,"props":3870,"children":3871},{"class":1325,"line":54},[3872,3876,3880,3884,3888,3892,3896,3900,3904,3908],{"type":1232,"tag":1323,"props":3873,"children":3874},{"style":1329},[3875],{"type":1237,"value":1332},{"type":1232,"tag":1323,"props":3877,"children":3878},{"style":1335},[3879],{"type":1237,"value":1801},{"type":1232,"tag":1323,"props":3881,"children":3882},{"style":1341},[3883],{"type":1237,"value":1344},{"type":1232,"tag":1323,"props":3885,"children":3886},{"style":1347},[3887],{"type":1237,"value":1350},{"type":1232,"tag":1323,"props":3889,"children":3890},{"style":1353},[3891],{"type":1237,"value":1356},{"type":1232,"tag":1323,"props":3893,"children":3894},{"style":1347},[3895],{"type":1237,"value":2178},{"type":1232,"tag":1323,"props":3897,"children":3898},{"style":1353},[3899],{"type":1237,"value":1387},{"type":1232,"tag":1323,"props":3901,"children":3902},{"style":1347},[3903],{"type":1237,"value":1392},{"type":1232,"tag":1323,"props":3905,"children":3906},{"style":1353},[3907],{"type":1237,"value":1397},{"type":1232,"tag":1323,"props":3909,"children":3910},{"style":1347},[3911],{"type":1237,"value":1361},{"type":1232,"tag":1323,"props":3913,"children":3914},{"class":1325,"line":38},[3915,3919,3923,3927,3932,3936],{"type":1232,"tag":1323,"props":3916,"children":3917},{"style":1347},[3918],{"type":1237,"value":1441},{"type":1232,"tag":1323,"props":3920,"children":3921},{"style":1425},[3922],{"type":1237,"value":1446},{"type":1232,"tag":1323,"props":3924,"children":3925},{"style":1347},[3926],{"type":1237,"value":2210},{"type":1232,"tag":1323,"props":3928,"children":3929},{"style":1425},[3930],{"type":1237,"value":3931},"values",{"type":1232,"tag":1323,"props":3933,"children":3934},{"style":1347},[3935],{"type":1237,"value":2220},{"type":1232,"tag":1323,"props":3937,"children":3938},{"style":1454},[3939],{"type":1237,"value":3940},"// 输出: [1, 2, 3]\n",{"type":1232,"tag":1243,"props":3942,"children":3943},{},[3944],{"type":1237,"value":3945},"这些方法可以帮助你在 TypeScript 中有效地处理和操作对象。通过理解和利用这些方法，你可以编写更健壮和灵活的代码。",{"type":1232,"tag":3947,"props":3948,"children":3949},"style",{},[3950],{"type":1237,"value":3951},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}",{"title":7,"searchDepth":384,"depth":384,"links":3953},[3954],{"id":316,"depth":38,"text":316,"children":3955},[3956],{"id":1272,"depth":333,"text":3957},"Object 类的静态方法","markdown","content:notes:ts:object:0.guide.md","content","notes/ts/object/0.guide.md","md",1719308456067]